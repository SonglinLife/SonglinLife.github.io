{
    "version": "https://jsonfeed.org/version/1",
    "title": "Life",
    "subtitle": null,
    "icon": "https://songlinlife.top/images/favicon.ico",
    "description": "Life is not about lifestyle, it means Lithium and Ferrum.",
    "home_page_url": "https://songlinlife.top",
    "items": [
        {
            "id": "https://songlinlife.top/2022/%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/",
            "url": "https://songlinlife.top/2022/%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/",
            "title": "寒假学习计划",
            "date_published": "2022-01-05T09:28:34.000Z",
            "content_html": "<p>哎，说实话，经过上半年对算法的学习，越学越感觉自己在数学上的力不从心，如果不是数学的制约可能自己真的能做出一番事。也有自己家庭的原因，因为我是工薪家庭，让父母供养我出国读书，可能不是一个现实的事情。。。再者我所在的实验室也没有认可学术上的追求，要想做学术，凭自己感觉很难。</p>\n<p><strong>于是</strong></p>\n<p>我决定了！！！</p>\n<hr />\n<p>做开发吧。</p>\n<p>☝️ 真的甘霖娘，兜兜转转还是逃不了做开发。。。</p>\n<p>为了准备明年的实习（实际上是今年）</p>\n<p>没办法，只好捡起以前丢下的 C<ins> 了，我觉得我的 C</ins> 基础还是可以的。</p>\n<p>目标：</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 学会 docker 的使用</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> 学会 vim 的使用</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 重新温习一遍 408</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> 重新捡起 C++</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> 刷够 100 道 LeetCode 题目</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> 学完 C++ primer</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> 学到 C++ effect</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> 完成开发者预测实验</label></p>\n</li>\n</ul>\n",
            "tags": [
                "记事"
            ]
        },
        {
            "id": "https://songlinlife.top/2022/vim01-Vim%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/",
            "url": "https://songlinlife.top/2022/vim01-Vim%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/",
            "title": "vim01: Vim基本用法",
            "date_published": "2022-01-05T09:26:14.000Z",
            "content_html": "<p>好早就想把这个坑给天热，一直拖着没去搞，现在终于有时间了</p>\n",
            "tags": [
                "Vim",
                "vim"
            ]
        },
        {
            "id": "https://songlinlife.top/2022/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%90%84%E4%B8%AA%E6%8C%87%E6%A0%87/",
            "url": "https://songlinlife.top/2022/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%90%84%E4%B8%AA%E6%8C%87%E6%A0%87/",
            "title": "机器学习中各个指标accuracy、precision、recall、F1、MCC",
            "date_published": "2022-01-04T06:03:46.000Z",
            "content_html": "<h3 id=\"accuracy-精度\"><a class=\"anchor\" href=\"#accuracy-精度\">#</a> Accuracy 精度</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>y</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo separator=\"true\">;</mo><mi mathvariant=\"script\">D</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold-italic\">x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><msub><mi>l</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">Accuracy(f;\\mathcal{D}) = \\frac{1}{n} \\sum_{i=1}^n[f(\\boldsymbol{x}_{i}) = label_i]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>也就是说准确率就是和标签的匹配程度。</p>\n<h3 id=\"precision-精确度\"><a class=\"anchor\" href=\"#precision-精确度\">#</a> Precision 精确度</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Precision = \\frac{TP}{TP +FP}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20220104140920128.png\" alt=\"image-20220104140920128\" /></p>\n<p>就是预测为正例中的结果有多少真实的正例，比如预测出垃圾邮件中有多少是真的垃圾邮件。</p>\n<h3 id=\"recall-召回率\"><a class=\"anchor\" href=\"#recall-召回率\">#</a> Recall 召回率</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Recall = \\frac{TP}{TP+FN}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>召回率就是说有多少正例被成功预测出来了。比如有多少垃圾邮件被成功预测出来了。</p>\n<p>如果要提高召回率，那么就要尽量降低预测的门槛，也就是说原来 0.7 被预测为真，现在我 0.6 被预测为真，自然可以筛选出更多的正例，但是这样就降低了精确率了，因为 0.6 就会被预测为真，自然会出现一些负例被预测为正例。</p>\n<h3 id=\"f1分数\"><a class=\"anchor\" href=\"#f1分数\">#</a> F1 分数</h3>\n<p>正负样本不均衡，accuracy 这个指标就没啥用，就像之前做的那个机器人账号预测一样。全部预测为机器人后，accuracy 数达到了 0.999，这显然没意义。</p>\n<p>因为 precision 和 Recall 这两个指标会出现矛盾，所以考虑他们最常见的方法就是 F1 分数。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mn>1</mn><mo>=</mo><mn>2</mn><mfrac><mrow><mtext> Precision </mtext><mo>∗</mo><mtext> Recall </mtext></mrow><mrow><mtext> Precision </mtext><mo>+</mo><mtext> Recall </mtext></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">F 1=2 \\frac{\\text { Precision } * \\text { Recall }}{\\text { Precision }+\\text { Recall }}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.14077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> Precision </span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord text\"><span class=\"mord\"> Recall </span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> Precision </span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord text\"><span class=\"mord\"> Recall </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>F1 数越大，一般代表模型的效果越好。</p>\n<h3 id=\"mcc\"><a class=\"anchor\" href=\"#mcc\">#</a> MCC</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">M</mi><mi mathvariant=\"normal\">C</mi><mi mathvariant=\"normal\">C</mi></mrow><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>×</mo><mi>T</mi><mi>N</mi><mo>−</mo><mi>F</mi><mi>P</mi><mo>×</mo><mi>F</mi><mi>N</mi></mrow><msqrt><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></msqrt></mfrac></mrow><annotation encoding=\"application/x-tex\">\\mathrm{MCC}=\\frac{T P \\times T N-F P \\times F N}{\\sqrt{(T P+F P)(T P+F N)(T N+F P)(T N+F N)}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mord mathrm\">C</span><span class=\"mord mathrm\">C</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.49033em;vertical-align:-1.13em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.175em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.935em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.8950000000000005em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30499999999999994em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>MCC 本质上是一个描述实际分类与预测分类之间的相关系数，它的取值范围为 [-1,1]，取值为 1 时表示对受试对象的完美预测，取值为 0 时表示预测的结果还不如随机预测的结果，-1 是指预测分类和实际分类完全不一致。</p>\n",
            "tags": [
                "AI"
            ]
        },
        {
            "id": "https://songlinlife.top/2022/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%EF%BC%9APredicting-long-time-contributors-for-GitHub-projects-using-machine-learning/",
            "url": "https://songlinlife.top/2022/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%EF%BC%9APredicting-long-time-contributors-for-GitHub-projects-using-machine-learning/",
            "title": "论文阅读：Predicting long-time contributors for GitHub projects using machine learning",
            "date_published": "2022-01-04T05:54:07.000Z",
            "content_html": "<h3 id=\"introduction\"><a class=\"anchor\" href=\"#introduction\">#</a> Introduction</h3>\n<p>long time contributor（LTC）预测，LTC 会贡献更多的代码，所以研究 LTC 是有必要的。</p>\n<h3 id=\"dataset\"><a class=\"anchor\" href=\"#dataset\">#</a> DataSet</h3>\n<p>888 个最流行的项目，56766 个贡献者，70899 个观察值。每个观察值对应了一个贡献者。这里注意：观察值和贡献者不一致是因为有的贡献者可能参与的多个项目，这里的观察值是一个贡献者在一个项目的情况。</p>\n<p>31 个特征，包括 13 个 repo 属性和 18 个贡献者特征。</p>\n<p>随机森林方法，AUC 达到了 0.913。</p>\n<p>构建方法：从 GHTorrent 中 09/01/2017 数据抽取了 t 根据 start 排名的 top1000 的 repo，并且将没有特定语言、不使用 github 作为 issue tracker、forked 项目、重复项目排除在外，最终构建了 888 个项目。</p>\n<h3 id=\"特征\"><a class=\"anchor\" href=\"#特征\">#</a> 特征</h3>\n<h5 id=\"重要特征\"><a class=\"anchor\" href=\"#重要特征\">#</a> 重要特征</h5>\n<p>top10 重要特种中，有 4 个 contributor 特征和 6 个 repository 特征。 <code>c_History_Followers</code> （contributor 的粉丝数)） <code>c_Age</code> （contributor 加入 github 和加入 repo 之间的天数差）是 contributor 两个最重要的特征。 <code>r_age</code> （contributor 加入 repo 和 repo 创建的时间差），r_Number_Of_watches（仓库得到的 watch 数）是 repo 的两个最重要的特征。</p>\n<h5 id=\"所有特征\"><a class=\"anchor\" href=\"#所有特征\">#</a> 所有特征</h5>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20220104145833565.png\" alt=\"image-20220104145833565\" /></p>\n<h5 id=\"特征的重要表\"><a class=\"anchor\" href=\"#特征的重要表\">#</a> 特征的重要表</h5>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20220104153402886.png\" alt=\"image-20220104153402886\" /></p>\n<h3 id=\"预测模型和参数\"><a class=\"anchor\" href=\"#预测模型和参数\">#</a> 预测模型和参数</h3>\n<p>随机森林作为预测模型，100 树。</p>\n<p>这个是个二分类问题，正例是 LTC，负例是 non-LTC。</p>\n<p>预测的阈值为 0.5</p>\n<h3 id=\"预测效果\"><a class=\"anchor\" href=\"#预测效果\">#</a> 预测效果</h3>\n<blockquote>\n<p>In 10-fold cross-validation, the precision, recall, F1-score, MCC, and AUC of our best model (random forest) are 0.695, 0.079, 0.140, 0.226, and 0.913.</p>\n</blockquote>\n<p>可以看出这个它预测的 recall 还是比较低的，也就是说它并不能很好地把 LTC 给找出来。但 AUC 值很高，</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20220104153046914.png\" alt=\"image-20220104153046914\" /></p>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>这篇文章最大的贡献就是使用了机器学习来预测 LTC。</p>\n",
            "tags": [
                "Xlab",
                "contributors"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/Loyalty-in-Online-Communities%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/",
            "url": "https://songlinlife.top/2021/Loyalty-in-Online-Communities%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/",
            "title": "Loyalty in Online Communities论文阅读",
            "date_published": "2021-12-29T02:33:16.000Z",
            "content_html": "<h3 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h3>\n<p>这篇 paper 主要考察了社交网络中 loyalty 这种属性，包括用户的 loyalty 和高 loyalty 用户数的 communities 他们之间的共同属性。</p>\n<h3 id=\"定义loyalty\"><a class=\"anchor\" href=\"#定义loyalty\">#</a> 定义 loyalty</h3>\n<p>使用的数据集为 Reddit。</p>\n<p><strong><strong>loyal users</strong></strong>：说白了就是热衷于某一社区的用户，并且这个热衷度是要高于其他社区的。原文中说如果用户 X 在 t 月对 A 社区有超过 50% 的评论即说明 A <em>prefer</em> A。如果用户 X 同时在 t 和 t+1 月 prefer A，即 X loyal to A。</p>\n<p><strong>vagrant users</strong>：</p>\n<blockquote>\n<p>We define a vagrant of A as a user who comments between 1 and 3 times in A at t, and, while still active on Reddit at time t + 1, does not contribute to A in t + 1.</p>\n</blockquote>\n<p>说白了就是三个月还在社区，但下个月就不在了。</p>\n<p><strong>Loyal communities</strong>：即高 loyalty rate 的社区，原文原则 top-25% 的社区作为 Loyal communities，底部 25% 的设为为 non-Loyalty communities。</p>\n<h3 id=\"数据集构建\"><a class=\"anchor\" href=\"#数据集构建\">#</a> 数据集构建</h3>\n<p>这是我最关注的部分：</p>\n<h5 id=\"基于chain的构图\"><a class=\"anchor\" href=\"#基于chain的构图\">#</a> 基于 chain 的构图</h5>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211229111451330.png\" alt=\"image-20211229111451330\" /></p>\n<p>Reddit 的特色，回复会形成一个 chain，这个构图方式会使用直接回复者和间接回复者作为 link。</p>\n<h5 id=\"replied-base\"><a class=\"anchor\" href=\"#replied-base\">#</a> replied base</h5>\n<p>这个就是直接基于回复进行构图：</p>\n<p>数据集：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturespicturesimage-20211229111703044.png\" alt=\"image-20211229111703044\" /></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211229111758539.png\" alt=\"image-20211229111758539\" /></p>\n<h3 id=\"communities-level-loyalty\"><a class=\"anchor\" href=\"#communities-level-loyalty\">#</a> Communities-level Loyalty</h3>\n<p>这个虽然也很重要，但不是我感兴趣的。</p>\n<p>就是 loyalty 社区具有的共同属性。</p>\n<h3 id=\"user-level-loyalty\"><a class=\"anchor\" href=\"#user-level-loyalty\">#</a> User-level Loyalty</h3>\n<p>文章提出了一个重要的概念：loyal user 通常在进入社区后就会成了 loyal user，也就是这具有内在性。</p>\n<p><strong>Post popularity</strong>：loyal user 会选择更低点赞或评论数的 post。</p>\n<h5 id=\"linguistic-style-of-comments\"><a class=\"anchor\" href=\"#linguistic-style-of-comments\">#</a> <strong>Linguistic style of comments</strong></h5>\n<p>作者用了 LIWC and computerized text analysis methods. 提到的一些语言学特性。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211229113238930.png\" alt=\"image-20211229113238930\" /></p>\n<h5 id=\"predicting-loyalty-from-first-contributions\"><a class=\"anchor\" href=\"#predicting-loyalty-from-first-contributions\">#</a> Predicting loyalty from first contributions</h5>\n<p>作者还使用了最初开始了 3 个评论来预测，使用上了语言学特性和 post score 作为预测，效果很好。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211229113404227.png\" alt=\"image-20211229113404227\" /></p>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>这篇论文给我最大的启发，我觉得可以去整一篇 ——viewer to contributiors to prefer to loyal 这么一个演变过程。</p>\n<p>github 用户在成为 contributor 之前经历了什么？star、fork、issue？</p>\n<p>issue 的语言学相关性质是否会对用户成为 contributor 有影响？</p>\n<p>在成为 contributor 之前 repo 是否有 co-contributor？</p>\n<p>loyal 的流失是否会有长期较大影响？</p>\n<p>loyal 与长期贡献是否有相关性？</p>\n",
            "tags": [
                "论文",
                "communities"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/HetGNN%EF%BC%9A%E7%AE%97%E6%B3%95%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90/",
            "url": "https://songlinlife.top/2021/HetGNN%EF%BC%9A%E7%AE%97%E6%B3%95%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90/",
            "title": "HetGNN：算法简单分析",
            "date_published": "2021-12-23T11:52:03.000Z",
            "content_html": "<h3 id=\"总览\"><a class=\"anchor\" href=\"#总览\">#</a> 总览</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223195438799.png\" alt=\"image-20211223195438799\" /></p>\n<p>这个算法主要分为 3 个步骤：</p>\n<h3 id=\"sampling-heterogeneous-neighbors\"><a class=\"anchor\" href=\"#sampling-heterogeneous-neighbors\">#</a> Sampling Heterogeneous Neighbors</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223195739287.png\" alt=\"image-20211223195739287\" /></p>\n<p>第一步采样得到邻居节点，作者的做法就是 random walk with restart（RWR）。这个 RWR 过程直接在异构图上进行，所以它会采样到各种节点，当节点数达到了设定的固定节点数，就停止采样。</p>\n<p>第二步，Group nodes。就把采样得到的不同节点 group，选取每个类别下 topk 频率的节点作为邻居节点。</p>\n<h3 id=\"encoding-heterogeneous-contents\"><a class=\"anchor\" href=\"#encoding-heterogeneous-contents\">#</a> Encoding Heterogeneous Contents</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223200126731.png\" alt=\"image-20211223200126731\" /></p>\n<p>因为异构图上不同节点的 content 不同，有的节点可能是 text，有的可能是 image，有个节点既有 image 也有 text。这一步做的就是把这些 content 提取出来，并输出一个 d 维的向量。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223200627966.png\" alt=\"image-20211223200627966\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><msub><mi>C</mi><mi>v</mi></msub></mrow></munder><mrow><mo fence=\"true\">[</mo><mover accent=\"true\"><mrow><mi>L</mi><mi>S</mi><mi>T</mi><mi>M</mi></mrow><mo stretchy=\"true\">→</mo></mover><mrow><mo fence=\"true\">{</mo><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>⨁</mo><mover accent=\"true\"><mrow><mi>L</mi><mi>S</mi><mi>T</mi><mi>M</mi></mrow><mo stretchy=\"true\">←</mo></mover><mrow><mo fence=\"true\">{</mo><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow><mrow><mo fence=\"true\">∣</mo><msub><mi>C</mi><mi>v</mi></msub><mo fence=\"true\">∣</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f_{1}(v)=\\frac{\\sum_{i \\in C_{v}}\\left[\\overrightarrow{L S T M}\\left\\{\\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)\\right\\} \\bigoplus \\overleftarrow{L S T M}\\left\\{\\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)\\right\\}\\right]}{\\left|C_{v}\\right|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.18135em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.24535em;\"><span style=\"top:-2.51933em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span><span style=\"top:-3.43533em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-4.24535em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39981em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.20533em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span><span class=\"svg-align\" style=\"top:-3.6833299999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">⨁</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.20533em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span><span class=\"svg-align\" style=\"top:-3.6833299999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 值得是原始的 content，FC 是变换函数，这个 FC 可以是 CNN 可以是 RNN，反正就是将原本的 content 转换为向量。</p>\n<p>LSTM 结构：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi mathvariant=\"normal\">z</mi><mi>i</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"script\">U</mi><mi>z</mi></msub><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi mathvariant=\"script\">W</mi><mi>z</mi></msub><msub><mrow><mtext> </mtext><mi mathvariant=\"normal\">h</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"normal\">b</mi><mi>z</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi mathvariant=\"normal\">f</mi><mi>i</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"script\">U</mi><mi>f</mi></msub><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi mathvariant=\"script\">W</mi><mi>f</mi></msub><msub><mrow><mtext> </mtext><mi mathvariant=\"normal\">h</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"normal\">b</mi><mi>f</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi mathvariant=\"normal\">o</mi><mi>i</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"script\">U</mi><mi>o</mi></msub><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi mathvariant=\"script\">W</mi><mi>o</mi></msub><msub><mrow><mtext> </mtext><mi mathvariant=\"normal\">h</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"normal\">b</mi><mi>o</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mover accent=\"true\"><mi mathvariant=\"normal\">c</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"script\">U</mi><mi>c</mi></msub><mi mathvariant=\"script\">F</mi><msub><mi>C</mi><msub><mi>θ</mi><mi>x</mi></msub></msub><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">x</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><msub><mi mathvariant=\"script\">W</mi><mi>c</mi></msub><msub><mrow><mtext> </mtext><mi mathvariant=\"normal\">h</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"normal\">b</mi><mi>c</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi mathvariant=\"normal\">c</mi><mi>i</mi></msub><mo>=</mo><msub><mi mathvariant=\"normal\">f</mi><mi>i</mi></msub><mo>∘</mo><msub><mi mathvariant=\"normal\">c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"normal\">z</mi><mi>i</mi></msub><mo>∘</mo><msub><mover accent=\"true\"><mi mathvariant=\"normal\">c</mi><mo>^</mo></mover><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mrow><mtext> </mtext><mi mathvariant=\"normal\">h</mi></mrow><mi>i</mi></msub><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi mathvariant=\"normal\">c</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo>∘</mo><msub><mi mathvariant=\"normal\">o</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\mathrm{z}_{i}=\\sigma\\left(\\mathcal{U}_{z} \\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)+\\mathcal{W}_{z} \\mathrm{~h}_{i-1}+\\mathrm{b}_{z}\\right) \\\\\n&amp;\\mathrm{f}_{i}=\\sigma\\left(\\mathcal{U}_{f} \\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)+\\mathcal{W}_{f} \\mathrm{~h}_{i-1}+\\mathrm{b}_{f}\\right) \\\\\n&amp;\\mathrm{o}_{i}=\\sigma\\left(\\mathcal{U}_{o} \\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)+\\mathcal{W}_{o} \\mathrm{~h}_{i-1}+\\mathrm{b}_{o}\\right) \\\\\n&amp;\\hat{\\mathrm{c}}_{i}=\\tanh \\left(\\mathcal{U}_{c} \\mathcal{F} C_{\\theta_{x}}\\left(\\mathrm{x}_{i}\\right)+\\mathcal{W}_{c} \\mathrm{~h}_{i-1}+\\mathrm{b}_{c}\\right) \\\\\n&amp;\\mathrm{c}_{i}=\\mathrm{f}_{i} \\circ \\mathrm{c}_{i-1}+\\mathrm{z}_{i} \\circ \\hat{\\mathrm{c}}_{i} \\\\\n&amp;\\mathrm{~h}_{i}=\\tanh \\left(\\mathrm{c}_{i}\\right) \\circ \\mathrm{o}_{i}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.000000000000002em;vertical-align:-4.250000000000001em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.750000000000001em;\"><span style=\"top:-6.750000000000001em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.749999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.249999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.7499999999999996em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.7500000000000009em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.250000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.750000000000001em;\"><span style=\"top:-6.910000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">z</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"mord mathrm\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"mord mathrm\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.9099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">o</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"mord mathrm\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-2.4099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\">tanh</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">W</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"mord mathrm\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-0.9099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">z</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:0.5900000000000007em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mspace nobreak\"> </span><span class=\"mord mathrm\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\">tanh</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">o</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.250000000000001em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>通过双向 LSTM 把 content 聚合起来，注意这一步的聚合是只聚合了 content，也就说是在单个节点上做的。</p>\n<p>最后通过 mean pooling 输出一个 d 维向量。</p>\n<h3 id=\"aggregating-heterogeneous-neighbors\"><a class=\"anchor\" href=\"#aggregating-heterogeneous-neighbors\">#</a> Aggregating Heterogeneous Neighbors</h3>\n<p>第一步就是基于相同 type 的 neighbor 聚合：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223201056370.png\" alt=\"image-20211223201056370\" /></p>\n<p>同样使用一个 LSTM 进行聚合。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>f</mi><mn>2</mn><mi>t</mi></msubsup><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><msup><mi>v</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>∈</mo><msub><mi>N</mi><mi>t</mi></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow></munder><mrow><mo fence=\"true\">[</mo><mover accent=\"true\"><mrow><mi>L</mi><mi>S</mi><mi>T</mi><mi>M</mi></mrow><mo stretchy=\"true\">→</mo></mover><mrow><mo fence=\"true\">{</mo><msub><mi>f</mi><mn>1</mn></msub><mrow><mo fence=\"true\">(</mo><msup><mi>v</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>⨁</mo><mover accent=\"true\"><mrow><mi>L</mi><mi>S</mi><mi>T</mi><mi>M</mi></mrow><mo stretchy=\"true\">←</mo></mover><mrow><mo fence=\"true\">{</mo><msub><mi>f</mi><mn>1</mn></msub><mrow><mo fence=\"true\">(</mo><msup><mi>v</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow><mo fence=\"true\">]</mo></mrow></mrow><mrow><mo fence=\"true\">∣</mo><msub><mi>N</mi><mi>t</mi></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f_{2}^{t}(v)=\\frac{\\sum_{v^{\\prime} \\in N_{t}(v)}\\left[\\overrightarrow{L S T M}\\left\\{f_{1}\\left(v^{\\prime}\\right)\\right\\} \\bigoplus \\overleftarrow{L S T M}\\left\\{f_{1}\\left(v^{\\prime}\\right)\\right\\}\\right]}{\\left|N_{t}(v)\\right|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.093556em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8435559999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.18135em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.24535em;\"><span style=\"top:-2.51933em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span><span style=\"top:-3.43533em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-4.24535em;\"><span class=\"pstrut\" style=\"height:3.20533em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.22528999999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.47471em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.20533em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span><span class=\"svg-align\" style=\"top:-3.6833299999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">⨁</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.20533em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span><span class=\"svg-align\" style=\"top:-3.6833299999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<blockquote>\n<p>Using different Bi-LSTMs to distinguish different node types for neighbors aggregation.</p>\n</blockquote>\n<p>第二步，聚合不同 type 的 neighbor 信息：</p>\n<p>不同的 embedding 对于节点的作用不同，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_1(v)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span></span></span></span> 是节点 v 经过 encoder 阶段产生的向量。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo>∪</mo><mrow><mo fence=\"true\">(</mo><msubsup><mi>f</mi><mn>2</mn><mi>t</mi></msubsup><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>t</mi><mo>∈</mo><msub><mi>O</mi><mi>V</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathcal{F}(v)=\\left\\{f_{1}(v) \\cup\\left(f_{2}^{t}(v), t \\in O_{V}\\right)\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.043556em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-2.4518920000000004em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi mathvariant=\"script\">E</mi><mi>v</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><msub><mi>f</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow></munder><msup><mi>α</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msup><msub><mi>f</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msup><mi>α</mi><mrow><mi>v</mi><mo separator=\"true\">,</mo><mi>i</mi></mrow></msup><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mi mathvariant=\"normal\">ReLU</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msup><mi>u</mi><mi>T</mi></msup><mrow><mo fence=\"true\">[</mo><msub><mi>f</mi><mi>i</mi></msub><mo>⨁</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow></mrow><mrow><munder><mo>∑</mo><mrow><msub><mi>f</mi><mi>j</mi></msub><mo>∈</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi mathvariant=\"normal\"><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">a</mi><mi mathvariant=\"normal\">k</mi><mi mathvariant=\"normal\">y</mi><mi mathvariant=\"normal\">R</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">L</mi><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"normal\">u</mi><mi mathvariant=\"normal\">T</mi></msup></mi><mo>⁡</mo><mrow><mo fence=\"true\">[</mo><msub><mi>f</mi><mi>j</mi></msub><mo>⊕</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{gathered}\n\\mathcal{E}_{v}=\\sum_{f_{i} \\in \\mathcal{F}(v)} \\alpha^{v, i} f_{i} \\\\\n\\alpha^{v, i}=\\frac{\\exp \\left\\{L e a k y \\operatorname{ReLU}\\left(u^{T}\\left[f_{i} \\bigoplus f_{1}(v)\\right]\\right)\\right\\}}{\\left.\\sum_{f_{j} \\in \\mathcal{F}(v)} \\exp \\left\\{\\operatorname{LeakyReLU(u^{T}}\\left[f_{j} \\oplus f_{1}(v)\\right]\\right)\\right\\}}\n\\end{gathered}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.446040000000001em;vertical-align:-2.9730200000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4730200000000004em;\"><span style=\"top:-6.013025000000001em;\"><span class=\"pstrut\" style=\"height:3.59001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.60701em;\"><span class=\"pstrut\" style=\"height:3.59001em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.59001em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.22528999999999982em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.49703em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mop\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">k</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span><span class=\"mord mathrm\">(</span><span class=\"mord\"><span class=\"mord mathrm\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.767331em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">T</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">}</span></span></span></span></span><span style=\"top:-3.38em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.89001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"mord\"><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">⨁</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69002em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.9730200000000004em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223202413189.png\" alt=\"image-20211223202413189\" /></p>\n",
            "tags": [
                "AI",
                "GNN",
                "异构图"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/%E8%AF%BB%E5%90%8E%E6%84%9F%EF%BC%9AAre-we-really-making-much-progress-Revisiting-benchmarking-and-refining-heterogeneous-graph-neural-networks/",
            "url": "https://songlinlife.top/2021/%E8%AF%BB%E5%90%8E%E6%84%9F%EF%BC%9AAre-we-really-making-much-progress-Revisiting-benchmarking-and-refining-heterogeneous-graph-neural-networks/",
            "title": "读后感：Are we really making much progress? Revisiting, benchmarking, and refining  heterogeneous graph neural networks(详解)",
            "date_published": "2021-12-23T08:51:12.000Z",
            "content_html": "<h3 id=\"读后感\"><a class=\"anchor\" href=\"#读后感\">#</a> 读后感</h3>\n<p>最近被师兄推荐了一篇异构图综述性质的文章。感觉看了之后挺有收获的，就把自己的理解写下来。</p>\n<h3 id=\"论文核心思想\"><a class=\"anchor\" href=\"#论文核心思想\">#</a> 论文核心思想</h3>\n<p>GAT 等基于同构图的算法应用在异构图上未必比应用在那些为异构图设计的算法要差。</p>\n<h3 id=\"论文贡献\"><a class=\"anchor\" href=\"#论文贡献\">#</a> 论文贡献</h3>\n<ul>\n<li>系统性地整合了现有的异构图算法的效果。</li>\n<li>提出了 HGB（异构图的 benchmark）</li>\n<li>提出了 simple-HGN 模型</li>\n</ul>\n<h3 id=\"以前的模型\"><a class=\"anchor\" href=\"#以前的模型\">#</a> 以前的模型</h3>\n<h4 id=\"node-classification\"><a class=\"anchor\" href=\"#node-classification\">#</a> node classification</h4>\n<ul>\n<li>HAN （这个之前复现过效果还行）</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><strong>GCN</strong></th>\n<th><strong>GAT</strong></th>\n<th><strong>HAN_sem</strong></th>\n<th><strong>HAN_nd</strong></th>\n<th style=\"text-align:center\"><strong>HAN</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Micro  F1</td>\n<td>0.8442/0.6687</td>\n<td>0.8508/0.6664</td>\n<td>0.8673</td>\n<td>0.8640</td>\n<td style=\"text-align:center\">0.8819</td>\n</tr>\n<tr>\n<td>Macro  F1</td>\n<td>0.8430/0.66709</td>\n<td>0.8503/0.6743</td>\n<td>0.8673</td>\n<td>0.8651</td>\n<td style=\"text-align:center\">0.8820</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>GTN Graph transformer network</li>\n<li>RSHN  Relation structure-aware heterogeneous graph neural network</li>\n<li>HetGNN heterogeneous graph neural network（这个算法还是很优秀的，感觉，思路很清楚）</li>\n<li>MAGNN meta-path aggregate graph neural network，HAN 的加强版。</li>\n<li>HGT heterogeneous graph transformer</li>\n<li>HetSANN Attention-based graph neural network for heterogeneous structural learning (这个算法细节没有给出）</li>\n</ul>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223190630122.png\" alt=\"image-20211223190630122\" /></p>\n<h4 id=\"link-prediction\"><a class=\"anchor\" href=\"#link-prediction\">#</a> Link Prediction</h4>\n<ul>\n<li>\n<p>RGCN 简单的异构图消息传递模型</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223191525111.png\" alt=\"image-20211223191525111\" /></p>\n</li>\n<li>\n<p>GATNE General attributed multiplex heterogeneous network embedding</p>\n</li>\n</ul>\n<h4 id=\"knowledge-aware-recommendation\"><a class=\"anchor\" href=\"#knowledge-aware-recommendation\">#</a> Knowledge-Aware Recommendation</h4>\n<ul>\n<li>KGCN、KGNN-LS</li>\n<li>KGAT</li>\n</ul>\n<h3 id=\"这些模型存在的问题\"><a class=\"anchor\" href=\"#这些模型存在的问题\">#</a> 这些模型存在的问题</h3>\n<p>这些模型都或多或少有些问题，一个常见的问题就是‘information missing in homogeneous baselines’ 。就之前看的 HAN 为例子，HAN 使用了 Metapath 将异构图提取为同构图。但 GAT 作为 baseline 只作用在了一个 Metapath 提取的 subgraph 上。</p>\n<h3 id=\"dataset\"><a class=\"anchor\" href=\"#dataset\">#</a> Dataset</h3>\n<h4 id=\"node-classification-2\"><a class=\"anchor\" href=\"#node-classification-2\">#</a> node classification</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223191818247.png\" alt=\"image-20211223191818247\" /></p>\n<h4 id=\"link-prediction-2\"><a class=\"anchor\" href=\"#link-prediction-2\">#</a> Link Prediction</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223191904472.png\" alt=\"image-20211223191904472\" /></p>\n<h4 id=\"knowledge-aware-recommendation-2\"><a class=\"anchor\" href=\"#knowledge-aware-recommendation-2\">#</a> Knowledge-Aware Recommendation</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223191934225.png\" alt=\"image-20211223191934225\" /></p>\n<h3 id=\"pipeline\"><a class=\"anchor\" href=\"#pipeline\">#</a> pipeline</h3>\n<p>这是论文中给出的 pipeline 的示意图，主要分为三个步骤 Feature Preprocessing、HGNN、Downstream Decorders。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223192018555.png\" alt=\"image-20211223192018555\" /></p>\n<h4 id=\"feature-preprocessing\"><a class=\"anchor\" href=\"#feature-preprocessing\">#</a> Feature Preprocessing</h4>\n<h5 id=\"linear-transformation\"><a class=\"anchor\" href=\"#linear-transformation\">#</a> Linear Transformation</h5>\n<p>特征映射相同维度：project feature of different types of nodes to a share vec space.</p>\n<h5 id=\"useful-types-selection\"><a class=\"anchor\" href=\"#useful-types-selection\">#</a> Useful Types Selection</h5>\n<p>选择有用的 type 节点。这里作者的做法是保留特定 type 节点的特征，将其他 type 节点特征全用 one-hot 代替。</p>\n<h4 id=\"downstream-decoders-and-loss-function\"><a class=\"anchor\" href=\"#downstream-decoders-and-loss-function\">#</a> Downstream Decoders and Loss function</h4>\n<p>说白了就是根据下游任务选择 decoder，对于 Node Classification 那么就是选择交叉熵。</p>\n<h3 id=\"a-simple-heterogeneous-gnn\"><a class=\"anchor\" href=\"#a-simple-heterogeneous-gnn\">#</a> A SIMPLE HETEROGENEOUS GNN</h3>\n<p>这里简单说一下这个模型，论文里还是说的很清楚的。</p>\n<h4 id=\"learnable-edge-type-embedding\"><a class=\"anchor\" href=\"#learnable-edge-type-embedding\">#</a> Learnable Edge-type Embedding</h4>\n<p>模型每一层给每一种边类型分配一个可学习的 embedding。</p>\n<p>attention 系数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mover accent=\"true\"><mi>α</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mi mathvariant=\"normal\">LeakyReLU</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msup><mi>a</mi><mi>T</mi></msup><mrow><mo fence=\"true\">[</mo><mi>W</mi><msub><mi>h</mi><mi>i</mi></msub><mrow><mo fence=\"true\">∥</mo><mi>W</mi><msub><mi>h</mi><mi>j</mi></msub><mo fence=\"true\">∥</mo></mrow><msub><mi>W</mi><mi>r</mi></msub><msub><mi>r</mi><mrow><mi>ψ</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mrow></msub><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><mrow><munder><mo>∑</mo><mrow><mi>k</mi><mo>∈</mo><msub><mi mathvariant=\"script\">N</mi><mi>i</mi></msub></mrow></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mi mathvariant=\"normal\">LeakyReLU</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msup><mi>a</mi><mi>T</mi></msup><mrow><mo fence=\"true\">[</mo><mi>W</mi><msub><mi>h</mi><mi>i</mi></msub><mrow><mo fence=\"true\">∥</mo><mi>W</mi><msub><mi>h</mi><mi>k</mi></msub><mo fence=\"true\">∥</mo></mrow><msub><mi>W</mi><mi>r</mi></msub><msub><mi>r</mi><mi>ψ</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\hat{\\alpha}_{i j}=\\frac{\\exp \\left(\\operatorname{LeakyReLU}\\left(a^{T}\\left[W h_{i}\\left\\|W h_{j}\\right\\| W_{r} r_{\\psi(\\langle i, j\\rangle)}\\right]\\right)\\right)}{\\sum_{k \\in \\mathcal{N}_{i}} \\exp \\left(\\operatorname{LeakyReLU}\\left(a^{T}\\left[W h_{i}\\left\\|W h_{k}\\right\\| W_{r} r_{\\psi}(\\langle i, k\\rangle)\\right]\\right)\\right)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.6810099999999997em;vertical-align:-1.08581em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5951999999999997em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.18639799999999995em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39981em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mop\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">k</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.767331em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">⟩</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7451999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mop\"><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">k</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mord mathrm\">R</span><span class=\"mord mathrm\">e</span><span class=\"mord mathrm\">L</span><span class=\"mord mathrm\">U</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen mtight\">(</span><span class=\"mopen mtight\">⟨</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">⟩</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.08581em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mrow><mi>ψ</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r_{\\psi(\\langle i, j\\rangle)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7857599999999999em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen mtight\">(</span><span class=\"mopen mtight\">⟨</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">⟩</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> 就是边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\psi(\\langle i, j\\rangle)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">⟩</span><span class=\"mclose\">)</span></span></span></span> 的 embedding。这个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>r</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 也是一个可学习的参数。</p>\n<h4 id=\"residual-connection\"><a class=\"anchor\" href=\"#residual-connection\">#</a> Residual Connection</h4>\n<h5 id=\"node-residual\"><a class=\"anchor\" href=\"#node-residual\">#</a> Node Residual</h5>\n<p>这里的 node residual 还是简单的，就是原本的 residual 方法加入个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>W</mi><mrow><mi>s</mi><mi>e</mi><mi>s</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">W_{ses}^{(l)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.161392em;vertical-align:-0.11659199999999997em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">s</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span></span></span></span> 可学习参数。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi mathvariant=\"script\">N</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mi>W</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msup><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\boldsymbol{h}_{i}^{(l)}=\\sigma\\left(\\sum_{j \\in \\mathcal{N}_{i}} \\alpha_{i j}^{(l)} W^{(l)} \\boldsymbol{h}_{j}^{(l-1)}+\\boldsymbol{h}_{i}^{(l-1)}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.321664em;vertical-align:-0.27686399999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.430444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.412972em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4129719999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi mathvariant=\"script\">N</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mi>W</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msup><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>W</mi><mrow><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">s</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\boldsymbol{h}_{i}^{(l)}=\\sigma\\left(\\sum_{j \\in \\mathcal{N}_{i}} \\alpha_{i j}^{(l)} W^{(l)} \\boldsymbol{h}_{j}^{(l-1)}+W_{\\mathrm{res}}^{(l)} \\boldsymbol{h}_{i}^{(l-1)}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.321664em;vertical-align:-0.27686399999999994em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.60004em;vertical-align:-1.55002em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎝</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎛</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.430444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.412972em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4129719999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">r</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">s</span></span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.2500000000000004em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎠</span></span></span><span style=\"top:-3.2550000000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"overlay\" style=\"height:0.3em;width:0.875em;\"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style=\"top:-4.05002em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"edge-residual\"><a class=\"anchor\" href=\"#edge-residual\">#</a> Edge Residual</h5>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy=\"false\">)</mo><msubsup><mover accent=\"true\"><mi>α</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><mi>β</mi><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mover accent=\"true\"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi mathvariant=\"script\">N</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>W</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>h</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msubsup><mi>h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mover accent=\"true\"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>k</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>W</mi><mrow><mi mathvariant=\"normal\">res</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msubsup><mi>h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{gathered}\n\\alpha_{i j k}^{(l)}=(1-\\beta) \\hat{\\alpha}_{i j k}^{(l)}+\\beta \\alpha_{i j k}^{(l-1)} \\\\\n\\hat{h}_{i k}^{(l)}=\\sum_{j \\in \\mathcal{N}_{i}} \\alpha_{i j k}^{(l)} W_{k}^{(l)} h_{j}^{(l-1)} \\\\\nh_{i}^{(l)}=\\sigma\\left(\\prod_{k=1}^{K} \\hat{h}_{i k}^{(l)}+W_{\\operatorname{res}(k)}^{(l)} h_{i}^{(l-1)}\\right)\n\\end{gathered}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.993114em;vertical-align:-3.746557em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.246557em;\"><span style=\"top:-7.030093em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374159999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374159999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374159999999999em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-5.242672000000001em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578799999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span></span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013079999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8556639999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.430444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374159999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013079999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.412972em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.6838920000000002em;\"><span class=\"pstrut\" style=\"height:3.828336em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578799999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span></span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013079999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">r</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">s</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5151999999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.746557em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>说白了就是 attention 加了个动量，这个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 是一个超参数。</p>\n<h5 id=\"adaptation-for-link-prediction\"><a class=\"anchor\" href=\"#adaptation-for-link-prediction\">#</a> Adaptation for Link Prediction.</h5>\n<blockquote>\n<p>We slightly modify the model architecture for better performance on link prediction. Edge residual is removed and the final embedding is the concatenation of embeddings from all the layers. This adapted version is similar to JKNet.</p>\n</blockquote>\n<h5 id=\"l2-norm\"><a class=\"anchor\" href=\"#l2-norm\">#</a> L2 Norm</h5>\n<p>在 output 层加上一个 L2 norm</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>=</mo><mfrac><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">∥</mo><msubsup><mi mathvariant=\"bold-italic\">h</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>L</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">∥</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">o_{i}=\\frac{\\boldsymbol{h}_{i}^{(L)}}{\\left\\|\\boldsymbol{h}_{i}^{(L)}\\right\\|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.43579em;vertical-align:-1.71399em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7218em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.173975em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.173975em;\"><span style=\"top:-1.955985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.556985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.572975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-3.173975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6500149999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.173975em;\"><span style=\"top:-1.955985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.556985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.572975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-3.173975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6500149999999999em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.403975em;\"><span class=\"pstrut\" style=\"height:3.173975em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.850975em;\"><span class=\"pstrut\" style=\"height:3.173975em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">h</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231360000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.27686399999999994em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.71399em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h4 id=\"benchmark\"><a class=\"anchor\" href=\"#benchmark\">#</a> benchmark</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211223194917860.png\" alt=\"image-20211223194917860\" /></p>\n",
            "tags": [
                "AI",
                "GNN"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ai/DGL-04-%E8%AE%AD%E7%BB%83%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",
            "url": "https://songlinlife.top/2021/ai/DGL-04-%E8%AE%AD%E7%BB%83%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",
            "title": "DGL(04): 训练图神经网络",
            "date_published": "2021-12-16T03:38:27.000Z",
            "content_html": "<h3 id=\"训练图神经网络\"><a class=\"anchor\" href=\"#训练图神经网络\">#</a> 训练图神经网络</h3>\n<h4 id=\"节点分类\"><a class=\"anchor\" href=\"#节点分类\">#</a> 节点分类</h4>\n<h5 id=\"网络模型\"><a class=\"anchor\" href=\"#网络模型\">#</a> 网络模型</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 构建一个 2 层的 GNN 模型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> dglnn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> dgl</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SAGE</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> in_feats<span class=\"token punctuation\">,</span> hid_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 实例化 SAGEConve，in_feats 是输入特征的维度，out_feats 是输出特征的维度，aggregator_type 是聚合函数的类型</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> dglnn<span class=\"token punctuation\">.</span>SAGEConv<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            in_feats<span class=\"token operator\">=</span>in_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token operator\">=</span>hid_feats<span class=\"token punctuation\">,</span> aggregator_type<span class=\"token operator\">=</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> dglnn<span class=\"token punctuation\">.</span>SAGEConv<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            in_feats<span class=\"token operator\">=</span>hid_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token operator\">=</span>out_feats<span class=\"token punctuation\">,</span> aggregator_type<span class=\"token operator\">=</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 输入是节点的特征</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        h <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        h <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        h <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> h</pre></td></tr></table></figure><h5 id=\"导入数据\"><a class=\"anchor\" href=\"#导入数据\">#</a> 导入数据</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>graph <span class=\"token operator\">=</span> CiteseerGraphDataset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>graph <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 放到 cuda 上进行训练</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211216121156432.png\" alt=\"image-20211216121156432\" /></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211216121353467.png\" alt=\"image-20211216121353467\" /></p>\n<p>可以看到只是用了 120 个训练节点。</p>\n<h5 id=\"处理mask\"><a class=\"anchor\" href=\"#处理mask\">#</a> 处理 mask</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_features <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node_labels <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>train_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'train_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>valid_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'val_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>test_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'test_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n_features <span class=\"token operator\">=</span> node_features<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n_labels <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>node_labels<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"评估函数\"><a class=\"anchor\" href=\"#评估函数\">#</a> 评估函数</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        logits <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">[</span>mask<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        labels <span class=\"token operator\">=</span> labels<span class=\"token punctuation\">[</span>mask<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        _<span class=\"token punctuation\">,</span> indices <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        correct <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>indices <span class=\"token operator\">==</span> labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> correct<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"训练过程\"><a class=\"anchor\" href=\"#训练过程\">#</a> 训练过程</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>model <span class=\"token operator\">=</span> SAGE<span class=\"token punctuation\">(</span>in_feats<span class=\"token operator\">=</span>n_features<span class=\"token punctuation\">,</span> hid_feats<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> out_feats<span class=\"token operator\">=</span>n_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>opt <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 使用所有节点 (全图) 进行前向传播计算</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> node_features<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 计算损失值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    loss <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>cross_entropy<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">[</span>train_mask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> node_labels<span class=\"token punctuation\">[</span>train_mask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 计算验证集的准确度</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    acc <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> node_features<span class=\"token punctuation\">,</span> node_labels<span class=\"token punctuation\">,</span> valid_mask<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 进行反向传播计算</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    opt<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    opt<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>acc <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> node_features<span class=\"token punctuation\">,</span> node_labels<span class=\"token punctuation\">,</span> test_mask<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>acc</pre></td></tr></table></figure><blockquote>\n<p>0.668</p>\n</blockquote>\n<p>可以看到只用了 120 个节点，但却最后的准确率达到了 0.668</p>\n<h4 id=\"异构图上的节点分类\"><a class=\"anchor\" href=\"#异构图上的节点分类\">#</a> 异构图上的节点分类</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Define a Heterograph Conv model</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RGCN</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> in_feats<span class=\"token punctuation\">,</span> hid_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token punctuation\">,</span> rel_names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># 实例化 HeteroGraphConv，in_feats 是输入特征的维度，out_feats 是输出特征的维度，aggregate 是聚合函数的类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> dglnn<span class=\"token punctuation\">.</span>HeteroGraphConv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            rel<span class=\"token punctuation\">:</span> dglnn<span class=\"token punctuation\">.</span>GraphConv<span class=\"token punctuation\">(</span>in_feats<span class=\"token punctuation\">,</span> hid_feats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> rel <span class=\"token keyword\">in</span> rel_names<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> aggregate<span class=\"token operator\">=</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> dglnn<span class=\"token punctuation\">.</span>HeteroGraphConv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            rel<span class=\"token punctuation\">:</span> dglnn<span class=\"token punctuation\">.</span>GraphConv<span class=\"token punctuation\">(</span>hid_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">for</span> rel <span class=\"token keyword\">in</span> rel_names<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> aggregate<span class=\"token operator\">=</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> graph<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 输入是节点的特征字典</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        h <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        h <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">:</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> h<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        h <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> h</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>model <span class=\"token operator\">=</span> RGCN<span class=\"token punctuation\">(</span>n_hetero_features<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> n_user_classes<span class=\"token punctuation\">,</span> hetero_graph<span class=\"token punctuation\">.</span>etypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>user_feats <span class=\"token operator\">=</span> hetero_graph<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'feature'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>item_feats <span class=\"token operator\">=</span> hetero_graph<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'feature'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>labels <span class=\"token operator\">=</span> hetero_graph<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>train_mask <span class=\"token operator\">=</span> hetero_graph<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'train_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>node_features <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">:</span> user_feats<span class=\"token punctuation\">,</span> <span class=\"token string\">'item'</span><span class=\"token punctuation\">:</span> item_feats<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>h_dict <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>hetero_graph<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">:</span> user_feats<span class=\"token punctuation\">,</span> <span class=\"token string\">'item'</span><span class=\"token punctuation\">:</span> item_feats<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>h_user <span class=\"token operator\">=</span> h_dict<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>h_item <span class=\"token operator\">=</span> h_dict<span class=\"token punctuation\">[</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>opt <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 只对 user 节点进行预测</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 使用所有节点的特征进行前向传播计算，并提取输出的 user 节点嵌入</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>hetero_graph<span class=\"token punctuation\">,</span> node_features<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 计算损失值</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    loss <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>cross_entropy<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">[</span>train_mask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">[</span>train_mask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 计算验证集的准确度。在本例中省略。</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 进行反向传播计算</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    opt<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    opt<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 如果需要的话，保存训练好的模型。本例中省略。</span></pre></td></tr></table></figure><p>大同小异，感觉，后面慢慢看吧。</p>\n",
            "tags": [
                "AI",
                "GNN",
                "DGL"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ai/DGL-03-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AE%A1%E9%81%93/",
            "url": "https://songlinlife.top/2021/ai/DGL-03-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AE%A1%E9%81%93/",
            "title": "DGL(03): 图数据处理管道",
            "date_published": "2021-12-16T01:56:12.000Z",
            "content_html": "<h1 id=\"图数据处理管道\"><a class=\"anchor\" href=\"#图数据处理管道\">#</a> 图数据处理管道</h1>\n<h3 id=\"dgldataset类\"><a class=\"anchor\" href=\"#dgldataset类\">#</a> DGLDataset 类</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211216095935092.png\" alt=\"image-20211216095935092\" /></p>\n<p>官方给的一个流程图。</p>\n<h3 id=\"框架代码\"><a class=\"anchor\" href=\"#框架代码\">#</a> 框架代码</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DGLDataset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyDataset</span><span class=\"token punctuation\">(</span>DGLDataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" 用于在DGL中自定义图数据集的模板：</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Parameters</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ----------</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    url : str</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        下载原始数据集的url。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    raw_dir : str</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        指定下载数据的存储目录或已下载数据的存储目录。默认: ~/.dgl/</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    save_dir : str</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        处理完成的数据集的保存目录。默认：raw_dir指定的值</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    force_reload : bool</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        是否重新导入数据集。默认：False</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    verbose : bool</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        是否打印进度信息。</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                 url<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                 raw_dir<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                 save_dir<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                 force_reload<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                 verbose<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MyDataset<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'dataset_name'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                                        url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                                        raw_dir<span class=\"token operator\">=</span>raw_dir<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                                        save_dir<span class=\"token operator\">=</span>save_dir<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                                        force_reload<span class=\"token operator\">=</span>force_reload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                        verbose<span class=\"token operator\">=</span>verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\"># 将原始数据下载到本地磁盘</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\"># 将原始数据处理为图、标签和数据集划分的掩码</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\"># 通过 idx 得到与之对应的一个样本</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># 数据样本的数量</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\"># 将处理后的数据保存至 `self.save_path`</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># 从 `self.save_path` 导入处理后的数据</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">has_cache</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\"># 检查在 `self.save_path` 中是否存有处理后的数据</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><p>继承 <code>DGLDataset</code>  的子类必须实现的函数： <code>process</code> 、 <code>__getitem__</code> 、 <code>__len__</code>  。</p>\n<p>在 <code>DGLDataset</code>  做的事情：存储有关数据集的图、特征、标签、掩码，以及诸如类别数、标签数等基本信息</p>\n<p>不应该做的事情： 诸如采样、划分或特征归一化等操作建议在 <code>DGLDataset</code>  子类之外完成。</p>\n<h3 id=\"下载数据\"><a class=\"anchor\" href=\"#下载数据\">#</a> 下载数据</h3>\n<h5 id=\"直接下载\"><a class=\"anchor\" href=\"#直接下载\">#</a> 直接下载：</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> download</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 存储文件的路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raw_dir<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.mat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 下载文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    download<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> path<span class=\"token operator\">=</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"下载并解压\"><a class=\"anchor\" href=\"#下载并解压\">#</a> 下载并解压：</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> download<span class=\"token punctuation\">,</span> check_sha1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 存储文件的路径，请确保使用与原始文件名相同的后缀</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    gz_file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>raw_dir<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.csv.gz'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 下载文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    download<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> path<span class=\"token operator\">=</span>gz_file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 检查 SHA-1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> check_sha1<span class=\"token punctuation\">(</span>gz_file_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_sha1_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">raise</span> UserWarning<span class=\"token punctuation\">(</span><span class=\"token string\">'File &#123;&#125; is downloaded but the content hash does not match.'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                          <span class=\"token string\">'The repo may be outdated or download may be incomplete. '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                          <span class=\"token string\">'Otherwise you can create an issue for it.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.csv.gz'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 将文件解压缩到目录 self.raw_dir 下的 self.name 目录中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    self<span class=\"token punctuation\">.</span>_extract_gz<span class=\"token punctuation\">(</span>gz_file_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>raw_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>解压文件会被解压缩到  <code>self.raw_dir</code>  下的目录  <code>self.name</code>  中。</p>\n<h3 id=\"处理数据\"><a class=\"anchor\" href=\"#处理数据\">#</a> 处理数据</h3>\n<h5 id=\"处理整图分类数据集\"><a class=\"anchor\" href=\"#处理整图分类数据集\">#</a> 处理整图分类数据集</h5>\n<p><strong>QM7bDataset</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DGLDataset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">QM7bDataset</span><span class=\"token punctuation\">(</span>DGLDataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _url <span class=\"token operator\">=</span> <span class=\"token string\">'http://deepchem.io.s3-website-us-west-1.amazonaws.com/'</span> \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token string\">'datasets/qm7b.mat'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _sha1_str <span class=\"token operator\">=</span> <span class=\"token string\">'4102c744bb9d6fd7b40ac67a300e49cd87e28392'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> raw_dir<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> force_reload<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> verbose<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>QM7bDataset<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'qm7b'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                          url<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                          raw_dir<span class=\"token operator\">=</span>raw_dir<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                          force_reload<span class=\"token operator\">=</span>force_reload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                          verbose<span class=\"token operator\">=</span>verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        mat_path <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>raw_path <span class=\"token operator\">+</span> <span class=\"token string\">'.mat'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 将数据处理为图列表和标签列表</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>graphs<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_load_graph<span class=\"token punctuation\">(</span>mat_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\" 通过idx获取对应的图和标签</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        Parameters</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ----------</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        idx : int</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            Item index</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Returns</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        -------</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        (dgl.DGLGraph, Tensor)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>graphs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"数据集中图的数量\"\"\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>graphs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"使用数据集\"><a class=\"anchor\" href=\"#使用数据集\">#</a> 使用数据集</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>dataloading <span class=\"token keyword\">import</span> GraphDataLoader</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 数据导入</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>dataset <span class=\"token operator\">=</span> QM7bDataset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>num_labels <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>num_labels</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 创建 dataloaders</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>dataloader <span class=\"token operator\">=</span> GraphDataLoader<span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 训练</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> g<span class=\"token punctuation\">,</span> labels <span class=\"token keyword\">in</span> dataloader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 用户自己的训练代码</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><h5 id=\"节点分类任务\"><a class=\"anchor\" href=\"#节点分类任务\">#</a> 节点分类任务</h5>\n<h6 id=\"使用节点分类数据集\"><a class=\"anchor\" href=\"#使用节点分类数据集\">#</a> 使用节点分类数据集：</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dataset <span class=\"token operator\">=</span> CiteseerGraphDataset<span class=\"token punctuation\">(</span>raw_dir<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>graph <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 获取划分的掩码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>train_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'train_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>val_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'val_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>test_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'test_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取节点特征</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>feats <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 获取标签</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>labels <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h6 id=\"可用于节点分类的数据集\"><a class=\"anchor\" href=\"#可用于节点分类的数据集\">#</a> 可用于节点分类的数据集：</h6>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjY2l0YXRpb25kYXRh\">Citation network dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjY29yYWZ1bGxkYXRh\">CoraFull dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjYW1hem9uY29idXlkYXRh\">Amazon Co-Purchase dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjY29hdXRob3JkYXRh\">Coauthor dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwja2FyYXRlY2x1YmRhdGE=\">Karate club dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjcHBpZGF0YQ==\">Protein-Protein Interaction dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjcmVkZGl0ZGF0YQ==\">Reddit dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjc2JtZGF0YQ==\">Symmetric Stochastic Block Model Mixture dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjc3N0ZGF0YQ==\">Stanford sentiment treebank dataset</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRnbC5haS9hcGkvcHl0aG9uL2RnbC5kYXRhLmh0bWwjcmRmZGF0YQ==\">RDF datasets</span></li>\n</ul>\n<h5 id=\"链接预测数据集\"><a class=\"anchor\" href=\"#链接预测数据集\">#</a> 链接预测数据集</h5>\n<h6 id=\"实现代码\"><a class=\"anchor\" href=\"#实现代码\">#</a> 实现代码</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建链接预测数据集示例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">KnowledgeGraphDataset</span><span class=\"token punctuation\">(</span>DGLBuiltinDataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> raw_dir<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> force_reload<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> verbose<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>reverse <span class=\"token operator\">=</span> reverse</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        url <span class=\"token operator\">=</span> _get_dgl_url<span class=\"token punctuation\">(</span><span class=\"token string\">'dataset/'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#123;&#125;.tgz'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>KnowledgeGraphDataset<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                                    url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                                    raw_dir<span class=\"token operator\">=</span>raw_dir<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                                    force_reload<span class=\"token operator\">=</span>force_reload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                                    verbose<span class=\"token operator\">=</span>verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 跳过一些处理的代码</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># === 跳过数据处理 ===</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 划分掩码</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'train_mask'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> train_mask</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'val_mask'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val_mask</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'test_mask'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> test_mask</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># 边类型</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'etype'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> etype</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># 节点类型</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        g<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'ntype'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ntype</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>_g <span class=\"token operator\">=</span> g</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">assert</span> idx <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"这个数据集只有一个图\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_g</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><h6 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> FB15k237Dataset</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 导入数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dataset <span class=\"token operator\">=</span> FB15k237Dataset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>graph <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 获取训练集掩码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>train_mask <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'train_mask'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>train_idx <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nonzero<span class=\"token punctuation\">(</span>train_mask<span class=\"token punctuation\">,</span> as_tuple<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>src<span class=\"token punctuation\">,</span> dst <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">(</span>train_idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 获取训练集中的边类型</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>rel <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'etype'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>train_idx<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"保存和加载数据\"><a class=\"anchor\" href=\"#保存和加载数据\">#</a> 保存和加载数据</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> dgl <span class=\"token keyword\">import</span> save_graphs<span class=\"token punctuation\">,</span> load_graphs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> makedirs<span class=\"token punctuation\">,</span> save_info<span class=\"token punctuation\">,</span> load_info</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 保存图和标签</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    graph_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_dgl_graph.bin'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    save_graphs<span class=\"token punctuation\">(</span>graph_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>graphs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 在 Python 字典里保存其他信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    info_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_info.pkl'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    save_info<span class=\"token punctuation\">(</span>info_path<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'num_classes'</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>num_classes<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 从目录 `self.save_path` 里读取处理过的数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    graph_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_dgl_graph.bin'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    self<span class=\"token punctuation\">.</span>graphs<span class=\"token punctuation\">,</span> label_dict <span class=\"token operator\">=</span> load_graphs<span class=\"token punctuation\">(</span>graph_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    self<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> label_dict<span class=\"token punctuation\">[</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    info_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_info.pkl'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    self<span class=\"token punctuation\">.</span>num_classes <span class=\"token operator\">=</span> load_info<span class=\"token punctuation\">(</span>info_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'num_classes'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">has_cache</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># 检查在 `self.save_path` 里是否有处理过的数据文件</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    graph_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_dgl_graph.bin'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    info_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>save_path<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">+</span> <span class=\"token string\">'_info.pkl'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>graph_path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>info_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"obg\"><a class=\"anchor\" href=\"#obg\">#</a> OBG</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZ2Iuc3RhbmZvcmQuZWR1L2RvY3MvaG9tZS8=\">Open Graph Benchmark (OGB)</span> 是一个图深度学习的基准数据集。使用 pip 安装 ogb 就可以使用了。</p>\n<h5 id=\"图分类任务\"><a class=\"anchor\" href=\"#图分类任务\">#</a> 图分类任务</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 载入 OGB 的 Graph Property Prediction 数据集</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> dgl</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> ogb<span class=\"token punctuation\">.</span>graphproppred <span class=\"token keyword\">import</span> DglGraphPropPredDataset</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>dataloading <span class=\"token keyword\">import</span> GraphDataLoader</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_collate_fn</span><span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 小批次是一个元组 (graph, label) 列表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    graphs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> batch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    g <span class=\"token operator\">=</span> dgl<span class=\"token punctuation\">.</span>batch<span class=\"token punctuation\">(</span>graphs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    labels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> batch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    labels <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> g<span class=\"token punctuation\">,</span> labels</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 载入数据集</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>dataset <span class=\"token operator\">=</span> DglGraphPropPredDataset<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'ogbg-molhiv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>split_idx <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>get_idx_split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># dataloader</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>train_loader <span class=\"token operator\">=</span> GraphDataLoader<span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> collate_fn<span class=\"token operator\">=</span>_collate_fn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>valid_loader <span class=\"token operator\">=</span> GraphDataLoader<span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> collate_fn<span class=\"token operator\">=</span>_collate_fn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>test_loader <span class=\"token operator\">=</span> GraphDataLoader<span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> collate_fn<span class=\"token operator\">=</span>_collate_fn<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"节点分类任务-2\"><a class=\"anchor\" href=\"#节点分类任务-2\">#</a> 节点分类任务</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 载入 OGB 的 Node Property Prediction 数据集</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ogb<span class=\"token punctuation\">.</span>nodeproppred <span class=\"token keyword\">import</span> DglNodePropPredDataset</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dataset <span class=\"token operator\">=</span> DglNodePropPredDataset<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'ogbn-proteins'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>split_idx <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>get_idx_split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># there is only one graph in Node Property Prediction datasets</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 在 Node Property Prediction 数据集里只有一个图</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>g<span class=\"token punctuation\">,</span> labels <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取划分的标签</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>train_label <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>valid_label <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">'valid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>test_label <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span>split_idx<span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h5 id=\"链接预测任务\"><a class=\"anchor\" href=\"#链接预测任务\">#</a> 链接预测任务</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 载入 OGB 的 Link Property Prediction 数据集</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> ogb<span class=\"token punctuation\">.</span>linkproppred <span class=\"token keyword\">import</span> DglLinkPropPredDataset</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dataset <span class=\"token operator\">=</span> DglLinkPropPredDataset<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'ogbl-ppa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>split_edge <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>get_edge_split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>graph <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>split_edge<span class=\"token punctuation\">[</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>split_edge<span class=\"token punctuation\">[</span><span class=\"token string\">'valid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>split_edge<span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "AI",
                "GNN",
                "DGL"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ai/DGL-02-%E6%9E%84%E5%BB%BA%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",
            "url": "https://songlinlife.top/2021/ai/DGL-02-%E6%9E%84%E5%BB%BA%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",
            "title": "DGL(02): 构建图神经网络",
            "date_published": "2021-12-15T14:17:21.000Z",
            "content_html": "<h3 id=\"dgl-搭建gnn模型\"><a class=\"anchor\" href=\"#dgl-搭建gnn模型\">#</a> DGL 搭建 GNN 模型</h3>\n<h5 id=\"init\"><a class=\"anchor\" href=\"#init\">#</a> init</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> expand_as_pair <span class=\"token comment\"># 如果不是 pair 就复制 object 变成 pair</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SAGEConv</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                 in_feats<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                 out_feats<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                 aggregator_type<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                 bias<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                 norm<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                 activation<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SAGEConv<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_in_dst_feats <span class=\"token operator\">=</span> expand_as_pair<span class=\"token punctuation\">(</span>in_feats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        self<span class=\"token punctuation\">.</span>_out_feats <span class=\"token operator\">=</span> out_feats</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">=</span> aggregator_type</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>norm <span class=\"token operator\">=</span> norm</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        self<span class=\"token punctuation\">.</span>activation <span class=\"token operator\">=</span> activation</pre></td></tr></table></figure><h4 id=\"sageconv\"><a class=\"anchor\" href=\"#sageconv\">#</a> SageConv</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211216090931226.png\" alt=\"image-20211216090931226\" /></p>\n<p>这个<strong> aggregate</strong> 可以是 mean、LSTM、pooling，放在能 aggregate 就行，甚至可以是 GCN，因为 GCN 实际上也是起到了一个 Aggregate 的作用，然后在传递到下一步，重复这个过程就可以聚合更远的节点信息。</p>\n<h4 id=\"构造参数\"><a class=\"anchor\" href=\"#构造参数\">#</a> 构造参数</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 聚合类型：mean、max_pool、lstm、gcn</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> aggregator_type <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'max_pool'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lstm'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gcn'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">raise</span> KeyError<span class=\"token punctuation\">(</span><span class=\"token string\">'Aggregator type &#123;&#125; not supported.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>aggregator_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> aggregator_type <span class=\"token operator\">==</span> <span class=\"token string\">'max_pool'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    self<span class=\"token punctuation\">.</span>fc_pool <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> aggregator_type <span class=\"token operator\">==</span> <span class=\"token string\">'lstm'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    self<span class=\"token punctuation\">.</span>lstm <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">,</span> batch_first<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> aggregator_type <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'max_pool'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lstm'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    self<span class=\"token punctuation\">.</span>fc_self <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_in_dst_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token punctuation\">,</span> bias<span class=\"token operator\">=</span>bias<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>self<span class=\"token punctuation\">.</span>fc_neigh <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_in_src_feats<span class=\"token punctuation\">,</span> out_feats<span class=\"token punctuation\">,</span> bias<span class=\"token operator\">=</span>bias<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>self<span class=\"token punctuation\">.</span>reset_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reset_parameters</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"重新初始化可学习的参数\"\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    gain <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>calculate_gain<span class=\"token punctuation\">(</span><span class=\"token string\">'relu'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'max_pool'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>xavier_uniform_<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fc_pool<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">,</span> gain<span class=\"token operator\">=</span>gain<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'lstm'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lstm<span class=\"token punctuation\">.</span>reset_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">!=</span> <span class=\"token string\">'gcn'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>xavier_uniform_<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fc_self<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">,</span> gain<span class=\"token operator\">=</span>gain<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>xavier_uniform_<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fc_neigh<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">,</span> gain<span class=\"token operator\">=</span>gain<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中的  <code>fc_self</code>  就聚合自身信息，  <code>fc_neigh</code>  用于聚合邻居信息。</p>\n<h4 id=\"消息传递\"><a class=\"anchor\" href=\"#消息传递\">#</a> 消息传递</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>function <span class=\"token keyword\">as</span> fn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> dgl<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> check_eq_shape</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'mean'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>srcdata<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> feat_src</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>copy_u<span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'neigh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    h_neigh <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">[</span><span class=\"token string\">'neigh'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'gcn'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    check_eq_shape<span class=\"token punctuation\">(</span>feat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>srcdata<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> feat_src</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> feat_dst</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>copy_u<span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'neigh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 除以入度</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    degs <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>in_degrees<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>feat_dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    h_neigh <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">[</span><span class=\"token string\">'neigh'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> graph<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>degs<span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'max_pool'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>srcdata<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fc_pool<span class=\"token punctuation\">(</span>feat_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>copy_u<span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'neigh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    h_neigh <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">[</span><span class=\"token string\">'neigh'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">raise</span> KeyError<span class=\"token punctuation\">(</span><span class=\"token string\">'Aggregator type &#123;&#125; not recognized.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_aggre_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># GraphSAGE 中 gcn 聚合不需要 fc_self</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_aggre_type <span class=\"token operator\">==</span> <span class=\"token string\">'gcn'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    rst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc_neigh<span class=\"token punctuation\">(</span>h_neigh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    rst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc_self<span class=\"token punctuation\">(</span>h_self<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>fc_neigh<span class=\"token punctuation\">(</span>h_neigh<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这段代码写的真的简单易懂。</p>\n<p><code>update_all</code>  负责更新信息， <code>fn.copy_u</code>  就把节点信息给 copy 到 mail 里，然后通过 <code>mean</code>  把邻居节点信息给聚合起来，放到  <code>dstdata</code>  里。 再通过 <code>fc_self</code>  和 <code>fc_neigh</code>  实现节点信息的更新。因为 <code>gcn</code>  在聚合邻居节点信息的时候，实际上也把自身的信息给聚合起来了，所以不需要再在更新步骤上加上 <code>fc_self</code>  。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 激活函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>activation <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    rst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>activation<span class=\"token punctuation\">(</span>rst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 归一化</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>norm <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    rst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>norm<span class=\"token punctuation\">(</span>rst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">return</span> rst</pre></td></tr></table></figure><p>最后通过激活函数和归一化层。</p>\n<h4 id=\"异构图上的graphconv\"><a class=\"anchor\" href=\"#异构图上的graphconv\">#</a> 异构图上的 GraphConv</h4>\n<p>这个异构图看的时候一直迷迷糊糊的，搞不懂咋回事。。。</p>\n<p>先记下来把：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>h</mi><mrow><mi>d</mi><mi>s</mi><mi>t</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi><munder><mo><mi>A</mi><mi>G</mi><mi>G</mi></mo><mrow><mi>r</mi><mo>∈</mo><mi mathvariant=\"script\">R</mi><mo separator=\"true\">,</mo><msub><mi>r</mi><mrow><mi>d</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>−</mo><mi>d</mi><mi>s</mi><mi>t</mi></mrow></munder></mi><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mi>r</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>g</mi><mi>r</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>h</mi><msub><mi>r</mi><mrow><mi>s</mi><mi>r</mi><mi>o</mi></mrow></msub><mi>l</mi></msubsup><msubsup><mi>h</mi><msub><mi>r</mi><mrow><mi>d</mi><mi>s</mi><mi>t</mi></mrow></msub><mi>l</mi></msubsup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">h_{d s t}^{(l+1)}=\\underset{r \\in \\mathcal{R}, r_{d s t}-d s t}{A G G}\\left(f_{r}\\left(g_{r}, h_{r_{s r o}}^{l} h_{r_{d s t}}^{l}\\right)\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3461079999999999em;vertical-align:-0.3013079999999999em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3986920000000005em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013079999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.787324em;vertical-align:-0.8882159999999999em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.3478920000000003em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\">R</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">GG</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8882159999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.899108em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34709999999999996em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.899108em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.02778em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35285999999999995em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HeteroGraphConv</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mods<span class=\"token punctuation\">,</span> aggregate<span class=\"token operator\">=</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>HeteroGraphConv<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>mods <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>ModuleDict<span class=\"token punctuation\">(</span>mods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>aggregate<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># 获取聚合函数的内部函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            self<span class=\"token punctuation\">.</span>agg_fn <span class=\"token operator\">=</span> get_aggregate_fn<span class=\"token punctuation\">(</span>aggregate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            self<span class=\"token punctuation\">.</span>agg_fn <span class=\"token operator\">=</span> aggregate</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">,</span> mod_args<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> mod_kwargs<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mod_args <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        mod_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> mod_kwargs <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        mod_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    outputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>nty <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> nty <span class=\"token keyword\">in</span> g<span class=\"token punctuation\">.</span>dsttypes<span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span> g<span class=\"token punctuation\">.</span>is_block<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    src_inputs <span class=\"token operator\">=</span> inputs</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    dst_inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>g<span class=\"token punctuation\">.</span>number_of_dst_nodes<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> inputs<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    src_inputs <span class=\"token operator\">=</span> dst_inputs <span class=\"token operator\">=</span> inputs</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">for</span> stype<span class=\"token punctuation\">,</span> etype<span class=\"token punctuation\">,</span> dtype <span class=\"token keyword\">in</span> g<span class=\"token punctuation\">.</span>canonical_etypes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    rel_graph <span class=\"token operator\">=</span> g<span class=\"token punctuation\">[</span>stype<span class=\"token punctuation\">,</span> etype<span class=\"token punctuation\">,</span> dtype<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> rel_graph<span class=\"token punctuation\">.</span>num_edges<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> stype <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> src_inputs <span class=\"token keyword\">or</span> dtype <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> dst_inputs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    dstdata <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>mods<span class=\"token punctuation\">[</span>etype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        rel_graph<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">(</span>src_inputs<span class=\"token punctuation\">[</span>stype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst_inputs<span class=\"token punctuation\">[</span>dtype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token operator\">*</span>mod_args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>etype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token operator\">**</span>mod_kwargs<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>etype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    outputs<span class=\"token punctuation\">[</span>dtype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>dstdata<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "AI",
                "GNN",
                "DGL"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ai/DGL-01-%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92%E8%8C%83%E5%BC%8F/",
            "url": "https://songlinlife.top/2021/ai/DGL-01-%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92%E8%8C%83%E5%BC%8F/",
            "title": "DGL(01): 信息传递范式",
            "date_published": "2021-12-15T12:32:27.000Z",
            "content_html": "<h1 id=\"消息传递范式\"><a class=\"anchor\" href=\"#消息传递范式\">#</a> 消息传递范式</h1>\n<h3 id=\"消息传递范式定义\"><a class=\"anchor\" href=\"#消息传递范式定义\">#</a> 消息传递范式定义</h3>\n<p>边上计算: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>m</mi><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>ϕ</mi><mrow><mo fence=\"true\">(</mo><msubsup><mi>x</mi><mi>v</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>x</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>w</mi><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">m_{e}^{(t+1)}=\\phi\\left(x_{v}^{(t)}, x_{u}^{(t)}, w_{e}^{(t)}\\right),(u, v, e) \\in \\mathcal{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.161392em;vertical-align:-0.11659199999999997em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span></span>.<br />\n 点上计算: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>x</mi><mi>v</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>ψ</mi><mrow><mo fence=\"true\">(</mo><msubsup><mi>x</mi><mi>v</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><mi>ρ</mi><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">{</mo><msubsup><mi>m</mi><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>:</mo><mo stretchy=\"false\">(</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi mathvariant=\"script\">E</mi><mo fence=\"true\">}</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x_{v}^{(t+1)}=\\psi\\left(x_{v}^{(t)}, \\rho\\left(\\left\\{m_{e}^{(t+1)}:(u, v, e) \\in \\mathcal{E}\\right\\}\\right)\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.161392em;vertical-align:-0.11659199999999997em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">{</span></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">}</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></p>\n<h5 id=\"消息函数phi\"><a class=\"anchor\" href=\"#消息函数phi\">#</a> 消息函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span></h5>\n<p>我的理解其实这个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>m</mi><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><mi>ϕ</mi><mrow><mo fence=\"true\">(</mo><msubsup><mi>x</mi><mi>v</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>x</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo separator=\"true\">,</mo><msubsup><mi>w</mi><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi mathvariant=\"script\">E</mi></mrow><annotation encoding=\"application/x-tex\">m_{e}^{(t+1)}=\\phi\\left(x_{v}^{(t)}, x_{u}^{(t)}, w_{e}^{(t)}\\right),(u, v, e) \\in \\mathcal{E}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.161392em;vertical-align:-0.11659199999999997em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"mord mathnormal\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834080000000004em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.11659199999999997em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08944em;\">E</span></span></span></span></span> 说白了就是在使用一个聚合方式，这个就是边聚合，也就是消息函数，包括 add、sub、mul、div、dot 等。</p>\n<p>DGL 的消息函数定义<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span>，是 dgl.function.u_add_v (' 源 ',' 目标 ',' 边 ')</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">message_func</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'he'</span><span class=\"token punctuation\">:</span> edges<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">[</span><span class=\"token string\">'hu'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> edges<span class=\"token punctuation\">.</span>dst<span class=\"token punctuation\">[</span><span class=\"token string\">'hv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"聚合函数rho\"><a class=\"anchor\" href=\"#聚合函数rho\">#</a> 聚合函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ρ</span></span></span></span></h5>\n<p>然后点上的计算就是聚合函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding=\"application/x-tex\">\\rho</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ρ</span></span></span></span>，有 sum、max、min 和 mean。</p>\n<p>DGL 的聚合定义是 dgl.function.sum ('mailbox', 'h')</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>function <span class=\"token keyword\">as</span> fn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>graph<span class=\"token punctuation\">.</span>apply_edges<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>u_add_v<span class=\"token punctuation\">(</span><span class=\"token string\">'el'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'er'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"更新函数psi\"><a class=\"anchor\" href=\"#更新函数psi\">#</a> 更新函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span></span></span></span></h5>\n<p>更新函数是一个可选择的函数。</p>\n<h5 id=\"消息传递函数\"><a class=\"anchor\" href=\"#消息传递函数\">#</a> 消息传递函数</h5>\n<p><code>update_all</code>  是 dgl 定义的 api，用法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">updata_all_example</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 在 graph.ndata ['ft'] 中存储结果</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    graph<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>u_mul_e<span class=\"token punctuation\">(</span><span class=\"token string\">'ft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                     fn<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ft'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 在 update_all 外调用更新函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    final_ft <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'ft'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> final_ft</pre></td></tr></table></figure><h3 id=\"编写消息传递代码\"><a class=\"anchor\" href=\"#编写消息传递代码\">#</a> 编写消息传递代码</h3>\n<p>对于一些情况下，必须保存边上的信息，所以可以用 <code>apply_edges</code>  的方法。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>linear <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>node_feat_dim <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> out_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">concat_message_function</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'cat_feat'</span><span class=\"token punctuation\">:</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>edges<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edges<span class=\"token punctuation\">.</span>dst<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>g<span class=\"token punctuation\">.</span>apply_edges<span class=\"token punctuation\">(</span>concat_message_function<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'out'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'cat_feat'</span><span class=\"token punctuation\">]</span> @ linear</pre></td></tr></table></figure><p>通过一个 linear 线性层，实现一个简单的降维。建议是不要保留 concat 的 feat，分开来计算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>function <span class=\"token keyword\">as</span> fn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>linear_src <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>node_feat_dim<span class=\"token punctuation\">,</span> out_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>linear_dst <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>node_feat_dim<span class=\"token punctuation\">,</span> out_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>out_src <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span> @ linear_src</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>out_dst <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>ndata<span class=\"token punctuation\">[</span><span class=\"token string\">'feat'</span><span class=\"token punctuation\">]</span> @ linear_dst</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>g<span class=\"token punctuation\">.</span>srcdata<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'out_src'</span><span class=\"token punctuation\">:</span> out_src<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>g<span class=\"token punctuation\">.</span>dstdata<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'out_dst'</span><span class=\"token punctuation\">:</span> out_dst<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>g<span class=\"token punctuation\">.</span>apply_edges<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>u_add_v<span class=\"token punctuation\">(</span><span class=\"token string\">'out_src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'out_dst'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'out'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"图上的一部分进行消息\"><a class=\"anchor\" href=\"#图上的一部分进行消息\">#</a> 图上的一部分进行消息</h3>\n<p>用节点编号创建一个子图，然后在子图上调用 update_all () 方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sg <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span>subgraph<span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sg<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>message_func<span class=\"token punctuation\">,</span> reduce_func<span class=\"token punctuation\">,</span> apply_node_func<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"消息传递中使用边的权重\"><a class=\"anchor\" href=\"#消息传递中使用边的权重\">#</a> 消息传递中使用边的权重</h3>\n<p>GAT（图注意力网络）和 GCN 的变种需要使用边的权重。GAT 好理解，就是需要 attention 来聚合。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>function <span class=\"token keyword\">as</span> fn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 假定 eweight 是一个形状为 (E, *) 的张量，E 是边的数量。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>graph<span class=\"token punctuation\">.</span>edata<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> eweight</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>graph<span class=\"token punctuation\">.</span>update_all<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>u_mul_e<span class=\"token punctuation\">(</span><span class=\"token string\">'ft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                 fn<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ft'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>u_mul_e</code> : u 是节点、e 是边，于是对应的意思就是节点  <code>ft</code>  的 ndata 乘上  <code>edata</code>  这个 api 的命名思路值得学习。</p>\n<h3 id=\"在异构图上进行消息传递\"><a class=\"anchor\" href=\"#在异构图上进行消息传递\">#</a> 在异构图上进行消息传递</h3>\n<p>异构图的消息传递分为两个部分：</p>\n<ol>\n<li>对每个关系计算和聚合消息</li>\n<li>对每个节点聚合来自不同关系的消息</li>\n</ol>\n<p>异构图的信息传递 api 是  <code>multi_update_all</code> ，示例代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dgl<span class=\"token punctuation\">.</span>function <span class=\"token keyword\">as</span> fn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> c_etype <span class=\"token keyword\">in</span> G<span class=\"token punctuation\">.</span>canonical_etypes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    srctype<span class=\"token punctuation\">,</span> etype<span class=\"token punctuation\">,</span> dsttype <span class=\"token operator\">=</span> c_etype</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Wh <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">[</span>etype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>feat_dict<span class=\"token punctuation\">[</span>srctype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 把它存在图中用来做消息传递</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    G<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span>srctype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'Wh_%s'</span> <span class=\"token operator\">%</span> etype<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Wh</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 指定每个关系的消息传递函数：(message_func, reduce_func).</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 注意结果保存在同一个目标特征 “h”，说明聚合是逐类进行的。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    funcs<span class=\"token punctuation\">[</span>etype<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">.</span>copy_u<span class=\"token punctuation\">(</span><span class=\"token string\">'Wh_%s'</span> <span class=\"token operator\">%</span> etype<span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 将每个类型消息聚合的结果相加。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>G<span class=\"token punctuation\">.</span>multi_update_all<span class=\"token punctuation\">(</span>funcs<span class=\"token punctuation\">,</span> <span class=\"token string\">'sum'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 返回更新过的节点特征字典</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>ntype <span class=\"token punctuation\">:</span> G<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span>ntype<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> ntype <span class=\"token keyword\">in</span> G<span class=\"token punctuation\">.</span>ntypes<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "AI",
                "GNN",
                "DGL"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ss/VScode-%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%85%8D%E5%AF%86%E7%A0%81/",
            "url": "https://songlinlife.top/2021/ss/VScode-%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E5%85%8D%E5%AF%86%E7%A0%81/",
            "title": "VScode 远程登录免密码",
            "date_published": "2021-12-13T04:18:10.000Z",
            "content_html": "<p>这个 VScode 免密码登录有点搞，参考了好几个文章，发现都没写全。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMDk1Mzc4Mw==\">VSCode 远程开发 (带免密)</span> 这篇文章大致写的还可以</p>\n<h3 id=\"remote机生成ssh-keys\"><a class=\"anchor\" href=\"#remote机生成ssh-keys\">#</a> remote 机生成 ssh keys</h3>\n<p><code>ssh-keygen</code></p>\n<h3 id=\"local机生成ssh-keys\"><a class=\"anchor\" href=\"#local机生成ssh-keys\">#</a> local 机生成 ssh keys</h3>\n<p>同样，这里，拷贝 local 机的 id_rsa.pub 秘钥内容</p>\n<h3 id=\"登录remote机\"><a class=\"anchor\" href=\"#登录remote机\">#</a> 登录 remote 机</h3>\n<p><code>echo &quot;local机的pub秘钥&quot; &gt;&gt;authorized_keys</code></p>\n<p><code>chmod 600 authorized_keys</code>  （没加这个命令死活登录不上）</p>\n",
            "tags": [
                "琐事",
                "vscode",
                "ssh"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ss/vscode-%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80zsh/",
            "url": "https://songlinlife.top/2021/ss/vscode-%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80zsh/",
            "title": "vscode 远程终端不能打开zsh",
            "date_published": "2021-12-11T02:57:05.000Z",
            "content_html": "<h3 id=\"vscode-远程终端不能打开zsh\"><a class=\"anchor\" href=\"#vscode-远程终端不能打开zsh\">#</a> vscode 远程终端不能打开 zsh</h3>\n<p>远程终端打开 zsh 报错 <code>The terminal process failed to launch: Path to shell executable &quot;zsh&quot; is not a file or a symlink</code></p>\n<p>问题原因：没有配置好 zsh 路径</p>\n<p>解决：打开 vscode  <code>首选项.设置</code> ，输入  <code>terminal.integrated.profiles.linux</code></p>\n<p>。打开 setting.json，将以下代码添加上：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"terminal.integrated.profiles.linux\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token property\">\"bash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bash\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"zsh\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/usr/bin/zsh\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>ok，搞定！</p>\n<h3 id=\"vscode终端zsh乱码\"><a class=\"anchor\" href=\"#vscode终端zsh乱码\">#</a> vscode 终端 zsh 乱码</h3>\n<p>打开设置，输入  <code>terminal.integrated.font</code> ，修改字体，这里我用的是 Powerline 字体，下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bvd2VybGluZS9mb250cyVFMyU4MCU4Mg==\">https://github.com/powerline/fonts。</span></p>\n<p>选择想要的字体进行安装，这里我选择  <code>Space Mono For Powerline</code>  进行安装。设置 vscode 的字体：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211211110317510.png\" alt=\"image-20211211110317510\" /></p>\n<p>最终效果：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211211110644151.png\" alt=\"image-20211211110644151\" /></p>\n",
            "tags": [
                "琐事",
                "zsh",
                "vscode"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/python/python%E4%B8%8D%E5%90%8C%E7%BA%A7%E6%A8%A1%E5%9D%97%E5%AF%BC%E5%85%A5/",
            "url": "https://songlinlife.top/2021/python/python%E4%B8%8D%E5%90%8C%E7%BA%A7%E6%A8%A1%E5%9D%97%E5%AF%BC%E5%85%A5/",
            "title": "python不同级模块导入",
            "date_published": "2021-12-10T08:50:26.000Z",
            "content_html": "<h3 id=\"一般的python工程目录结构\"><a class=\"anchor\" href=\"#一般的python工程目录结构\">#</a> 一般的 Python 工程目录结构</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210180853081.png\" alt=\"image-20211210180853081\" /></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210181004740.png\" alt=\"image-20211210181004740\" /></p>\n<p>这个参考👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iMTZhOWJmYzI5YjY=\">Python 工程目录结构，目录之间自定义包模块文件的引用</span></p>\n<p>对于这种模块依赖我做了以下实验：</p>\n<h3 id=\"测试结构\"><a class=\"anchor\" href=\"#测试结构\">#</a> 测试结构：</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210171407310.png\" alt=\"image-20211210171407310\" /></p>\n<p>my_test 作为主模块， 里面有 sub01 和 sub02 两个子模块，其中 sub01 还有 sub01_sub01 这个子模块。</p>\n<p>对于这些 <code>sub*fc.py</code>  的 python 文件，全部内容都是：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> sub<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>所有的  <code>__init__.py</code>  文件都初始为： <code>print(__package__)</code></p>\n<h3 id=\"同级导入\"><a class=\"anchor\" href=\"#同级导入\">#</a> 同级导入</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># test.py</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> my_test</pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210170355194.png\" alt=\"image-20211210170355194\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test<span class=\"token punctuation\">.</span>my_testfc <span class=\"token keyword\">as</span> my_test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_test<span class=\"token punctuation\">.</span>my_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210170620645.png\" alt=\"image-20211210170620645\" /></p>\n<h4 id=\"导入子模块\"><a class=\"anchor\" href=\"#导入子模块\">#</a> 导入子模块</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test<span class=\"token punctuation\">.</span>sub01</pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210170825934.png\" alt=\"image-20211210170825934\" /></p>\n<h4 id=\"导入两层子模块\"><a class=\"anchor\" href=\"#导入两层子模块\">#</a> 导入两层子模块</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test<span class=\"token punctuation\">.</span>sub01<span class=\"token punctuation\">.</span>sub01_sub01</pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210170940022.png\" alt=\"image-20211210170940022\" /></p>\n<p>ok，证明我们的导入方法没有太大问题。</p>\n<h4 id=\"存在的问题\"><a class=\"anchor\" href=\"#存在的问题\">#</a> 存在的问题</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_test<span class=\"token punctuation\">.</span>my_testfc<span class=\"token punctuation\">.</span>my_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>发现报错了。。。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210171911791.png\" alt=\"image-20211210171911791\" /></p>\n<h5 id=\"解决办法\"><a class=\"anchor\" href=\"#解决办法\">#</a> 解决办法：</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test<span class=\"token punctuation\">.</span>my_testfc <span class=\"token keyword\">as</span> my_test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_test<span class=\"token punctuation\">.</span>my_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210172030179.png\" alt=\"image-20211210172030179\" /></p>\n<p>可以看到，这样就可以使用 my_testfc.py 这个文件了。</p>\n<p>也就是说，如果想用啥文件要一级一级导入，这太麻烦了。</p>\n<h3 id=\"一次性导入\"><a class=\"anchor\" href=\"#一次性导入\">#</a> 一次性导入</h3>\n<p>我觉得导入这个过程还是太麻烦了，想要一次性 my_test 下的所有包。</p>\n<p>设置 my_test 下的一级__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> my_testfc</pre></td></tr></table></figure><p>那么我们导入时候，就可以直接</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> my_test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_test<span class=\"token punctuation\">.</span>my_testfc<span class=\"token punctuation\">.</span>my_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210172551526.png\" alt=\"image-20211210172551526\" /></p>\n<p>看来没有任何问题。。。</p>\n<p>同样我们还可以用__init__.py 的 __all__属性。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>__all__<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'my_testfc'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>这样就可以直接导入了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> my_test <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_testfc<span class=\"token punctuation\">.</span>my_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210172856055.png\" alt=\"image-20211210172856055\" /></p>\n<p>ok，我现在想要导入子模块，一样地方式设置__init__.py 。</p>\n<p>/my_test/__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub02</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> my_testfc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>__all__<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'my_testfc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sub01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sub02'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>/my_test/sub01/__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01fc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01_sub01</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>__all__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sub01fc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'sub01_sub01'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>/my_test/sub01/sub01_sub01/__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01_sub01fc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>__all__<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sub01_sub01fc'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>/my_test/sub02/__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub02fc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>__all__<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sub02fc'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>这里有个神奇的操作：</p>\n<p><strong>init</strong>.py 的神奇用法 - 酸痛鱼的文章 - 知乎 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTUzNTA3NTg=\">https://zhuanlan.zhihu.com/p/115350758</span></p>\n<p>/my_test/__init__.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub02</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> my_testfc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>__all__<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'my_testfc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sub01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sub02'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sub01fc <span class=\"token operator\">=</span> sub01<span class=\"token punctuation\">.</span>sub01fc<span class=\"token punctuation\">.</span>sub01<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QucHk=\">test.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> my_test <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sub01fc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210174839844.png\" alt=\"image-20211210174839844\" /></p>\n<p>通过命名可以使得函数直接使用。</p>\n<h3 id=\"不同文件夹下导入\"><a class=\"anchor\" href=\"#不同文件夹下导入\">#</a> 不同文件夹下导入</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210175259919.png\" alt=\"image-20211210175259919\" /></p>\n<p>现在我想要 sub01 的 sub01.fc 用上 sub02 的 sub02fc.py 文件</p>\n<p>/my_test/sub01/sub01fc.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub02</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub01_sub02</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sub02<span class=\"token punctuation\">.</span>sub02fc<span class=\"token punctuation\">.</span>sub02<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QucHk=\">test.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> my_test <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sub01<span class=\"token punctuation\">.</span>sub01fc<span class=\"token punctuation\">.</span>sub01_sub02<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210175503555.png\" alt=\"image-20211210175503555\" /></p>\n<p>看来没有问题</p>\n<h4 id=\"sub02引用sub01下的sub01_sub01\"><a class=\"anchor\" href=\"#sub02引用sub01下的sub01_sub01\">#</a> sub02 引用 sub01 下的 sub01_sub01:</h4>\n<p>/my_test/sub02/sub02fc.py</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub02</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> sub01</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sub02_sub01_sub01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sub01<span class=\"token punctuation\">.</span>sub01_sub01<span class=\"token punctuation\">.</span>sub01_sub01fc<span class=\"token punctuation\">.</span>sub01_sub01<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QucHk=\">test.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> my_test <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sub02<span class=\"token punctuation\">.</span>sub02fc<span class=\"token punctuation\">.</span>sub02_sub01_sub01<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211210180441518.png\" alt=\"image-20211210180441518\" /></p>\n<p>可以看到成功打印了 sub01_sub01fc</p>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>模板的工作路径   <code>os.getcwd()</code>  就是当前执行文件的工作路径，所以当确定好了模块后，就不要 run 了。</p>\n<p>这个模块有点搞，如果不注意，会有很多很多错误问题，这个绝对路径和相对路径还有一堆有待解决的问题，先这样了。</p>\n",
            "tags": [
                "Python",
                "python",
                "pip",
                "模块",
                "工程目录"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/python/pip%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/",
            "url": "https://songlinlife.top/2021/python/pip%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/",
            "title": "pip 相关问题",
            "date_published": "2021-12-08T10:43:22.000Z",
            "content_html": "<h1 id=\"pip-相关问题\"><a class=\"anchor\" href=\"#pip-相关问题\">#</a> pip 相关问题</h1>\n<h5 id=\"安装依赖\"><a class=\"anchor\" href=\"#安装依赖\">#</a> 安装依赖</h5>\n<p><code>pip install xxx</code></p>\n<h5 id=\"移除依赖\"><a class=\"anchor\" href=\"#移除依赖\">#</a> 移除依赖</h5>\n<p><code>pip uninstall xxx</code></p>\n<h5 id=\"列出依赖\"><a class=\"anchor\" href=\"#列出依赖\">#</a> 列出依赖</h5>\n<p><code>pip list</code></p>\n<h5 id=\"生成requirementstxt\"><a class=\"anchor\" href=\"#生成requirementstxt\">#</a> 生成 <code>requirements.txt</code></h5>\n<p><code>pip freeze &gt; requirements.txt</code></p>\n<h5 id=\"安装requirementstxt\"><a class=\"anchor\" href=\"#安装requirementstxt\">#</a> 安装 <code>requirements.txt</code></h5>\n<p><code>pip install -r requirements.txt</code></p>\n<h5 id=\"清除未安装成功包warning-ignoring-invalid-distribution-\"><a class=\"anchor\" href=\"#清除未安装成功包warning-ignoring-invalid-distribution-\">#</a> 清除未安装成功包 (WARNING: Ignoring invalid distribution -)</h5>\n<p><code>cd xxx/anaconda/lib/pythonxxx/site-packages</code></p>\n<p><code>rm -rf $(ls | grep &quot;^~&quot;)</code></p>\n",
            "tags": [
                "Python"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/python/pymongo%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%EF%BC%88%E5%B5%8C%E5%A5%97%E3%80%81%E8%8C%83%E5%9B%B4%E3%80%81aggregate%EF%BC%89/",
            "url": "https://songlinlife.top/2021/python/pymongo%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%EF%BC%88%E5%B5%8C%E5%A5%97%E3%80%81%E8%8C%83%E5%9B%B4%E3%80%81aggregate%EF%BC%89/",
            "title": "MTTU代码实现思路",
            "date_published": "2021-12-08T10:43:22.000Z",
            "content_html": "<h3 id=\"pymongo连接阿里云mongodb服务器\"><a class=\"anchor\" href=\"#pymongo连接阿里云mongodb服务器\">#</a> pymongo 连接阿里云 MongoDB 服务器</h3>\n<p>这里我用了 <code>pymongo</code>   <code>3.6</code>  版本，不知道为什么，pymongo 4.0 不能连上阿里云的 MongoDB 服务器，怎么改也没有。。。😅</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_db</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    username <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>quote_plus<span class=\"token punctuation\">(</span><span class=\"token string\">'数据库name'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    password <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>quote_plus<span class=\"token punctuation\">(</span><span class=\"token string\">'数据库password'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    tunnel <span class=\"token operator\">=</span> SSHTunnelForwarder<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                            <span class=\"token punctuation\">(</span><span class=\"token string\">\"跳板机ip\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                            ssh_username<span class=\"token operator\">=</span><span class=\"token string\">\"跳板机名称\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                            ssh_password<span class=\"token operator\">=</span><span class=\"token string\">\"跳板机密码\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                            remote_bind_address<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"阿里云MongoDB服务器地址\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3717</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    tunnel<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tunnel<span class=\"token punctuation\">.</span>local_bind_port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    client <span class=\"token operator\">=</span> MongoClient<span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://%s:%s@127.0.0.1'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tunnel<span class=\"token punctuation\">.</span>local_bind_port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">[</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    npm_records <span class=\"token operator\">=</span> db<span class=\"token punctuation\">[</span><span class=\"token string\">'npm_records'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    npm_metas <span class=\"token operator\">=</span> db<span class=\"token punctuation\">[</span><span class=\"token string\">'npm_metas'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> npm_records<span class=\"token punctuation\">,</span> npm_metas</pre></td></tr></table></figure><h3 id=\"mttu查询\"><a class=\"anchor\" href=\"#mttu查询\">#</a> MTTU 查询</h3>\n<h4 id=\"查询依赖metas数据\"><a class=\"anchor\" href=\"#查询依赖metas数据\">#</a> 查询依赖 metas 数据</h4>\n<ul>\n<li>\n<p><code>dms</code>  终端下：</p>\n<p><code>db.npm_metas.find(&#123;&quot;name&quot;: &quot;joi&quot;&#125;)</code></p>\n</li>\n<li>\n<p><code>pymongo</code>  下</p>\n<p><code>npm_metas.find(&#123;&quot;name&quot;:&quot;joi&#125;)</code></p>\n</li>\n</ul>\n<h4 id=\"查询组件创建时间\"><a class=\"anchor\" href=\"#查询组件创建时间\">#</a> 查询组件创建时间</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_com_create_time</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> com_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        com_create_time <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>metas<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>com_name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"created\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>com_create_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'created'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>返回依赖的创建时间</p>\n<h4 id=\"查询组件是否存在\"><a class=\"anchor\" href=\"#查询组件是否存在\">#</a> 查询组件是否存在</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_com_exist</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> com_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tmp <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>metas<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>com_name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">raise</span> RuntimeError<span class=\"token punctuation\">(</span><span class=\"token string\">\"No such component\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>com_create_time <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_com_create_time<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>com_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>com_create_time <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">raise</span> RuntimeError<span class=\"token punctuation\">(</span><span class=\"token string\">\"No such component\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"组件时间范围版本列表\"><a class=\"anchor\" href=\"#组件时间范围版本列表\">#</a> 组件时间范围版本列表</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_ver_list</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> start<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> start <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">1999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        verlist <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>metas<span class=\"token punctuation\">.</span>aggregate<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token punctuation\">[</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token string\">\"$match\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token string\">\"$unwind\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"$releases\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token string\">\"$project\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                            <span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                            <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"$releases.version\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                            <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"$releases.time\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token string\">\"$match\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                <span class=\"token string\">\"$lte\"</span><span class=\"token punctuation\">:</span> end<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                                <span class=\"token string\">\"$gte\"</span><span class=\"token punctuation\">:</span> start</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        verlist <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>verlist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> verlist</pre></td></tr></table></figure><p>这里有个 MongoDB 的管道的复杂查询：</p>\n<ul>\n<li><code>aggregate</code> ： MongoDB 强大的聚合函数</li>\n<li><code>$match</code> ：match 用于过滤文档</li>\n<li><code>$unwind</code> ：将 release 列表拆分为多个文档</li>\n<li><code>$project</code> ：过滤函数，可以指定新的字段名，&quot;_id&quot; 是显示地为 1</li>\n<li><code>lte、gte</code> ：分别是代码比较函数</li>\n</ul>\n<p>之后的代码都是怎么运用这些基础查询，这里略过。</p>\n<h3 id=\"代码实现思考\"><a class=\"anchor\" href=\"#代码实现思考\">#</a> 代码实现思考</h3>\n<p>这个代码写的我很混乱，我现在都不知道我是咋实现的。。。</p>\n",
            "tags": [
                "Python",
                "pymongo",
                "MongoDB",
                "xlab",
                "npm",
                "python"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/js/%E4%BB%A3%E5%8A%9E/",
            "url": "https://songlinlife.top/2021/js/%E4%BB%A3%E5%8A%9E/",
            "title": "待办",
            "date_published": "2021-12-05T06:31:42.000Z",
            "content_html": "<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> 用 python 实现一个 MTTU 查询脚本</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> 学习 Vim 的使用</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 学习 CSS 和 js 的使用</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> 学习 GNN 和 ML</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> 实现动漫角色人脸识别</label></li>\n</ul>\n",
            "tags": [
                "记事"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ai/PageRank/",
            "url": "https://songlinlife.top/2021/ai/PageRank/",
            "title": "PageRank算法",
            "date_published": "2021-12-05T04:00:00.000Z",
            "content_html": "<h1 id=\"pagerank\"><a class=\"anchor\" href=\"#pagerank\">#</a> PageRank</h1>\n<p>在理解 pagerank 算法之前需要理解 Markov chain。可以说 PageRank 的核心就是 Markov 算法，PageRank 的执行过程、收敛条件都可以从 Markov 中得到答案。</p>\n<h2 id=\"markov-chain\"><a class=\"anchor\" href=\"#markov-chain\">#</a> Markov chain</h2>\n<h4 id=\"基本定义\"><a class=\"anchor\" href=\"#基本定义\">#</a> 基本定义</h4>\n<p>马尔科夫性：未来只依赖现在（假设现在已知），而与过去无关。</p>\n<p>一阶马尔科夫链：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">P(X_t| X_0,X_1,\\cdots ,X_{t-1}) = P(X_t| X_{t-1})\\quad t=1,2,\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span></span></span></span></p>\n<p>其中 $P (X_t| X_0,X_1,\\cdots ,X_{t-1}) $ ，表示在 $X_0,X_1,\\cdots ,X_{t-1} <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>发生的情况下，</mtext></mrow><annotation encoding=\"application/x-tex\">发生的情况下，</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">情</span><span class=\"mord cjk_fallback\">况</span><span class=\"mord cjk_fallback\">下</span><span class=\"mord cjk_fallback\">，</span></span></span></span>X_t<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>发生的条件概率，而这个条件概率又与</mtext></mrow><annotation encoding=\"application/x-tex\">发生的条件概率，而这个条件概率又与</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">条</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">概</span><span class=\"mord cjk_fallback\">率</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">而</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">条</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">概</span><span class=\"mord cjk_fallback\">率</span><span class=\"mord cjk_fallback\">又</span><span class=\"mord cjk_fallback\">与</span></span></span></span> P (X_t| X_{t-1})$ 相等，说明<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的概率只由<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">X_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 决定。这就是未来只依赖现在（假设现在已知），而与过去无关。</p>\n<p>n 阶马尔科夫链：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mi>n</mi></mrow></msub><mo>⋯</mo><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo></mrow><annotation encoding=\"application/x-tex\">P(X_t| X_0,X_1,\\cdots ,X_{t-1}) = P(X_t|X_{t-n}\\cdots X_{t-1})\\quad t=1,2,\\cdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.28055599999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span></span></span></span></p>\n<h4 id=\"转移矩阵\"><a class=\"anchor\" href=\"#转移矩阵\">#</a> 转移矩阵</h4>\n<p>马尔科夫链在 t-1 时刻处于 j 状态，那么时刻 t 转移到 i 状态的概率可以记作：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>t</mi></msub><mo>=</mo><mi>i</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{ij} = (X_t = i| X_{t-1} =j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>马尔科夫链的转移概率就可以用转移矩阵表示为 P。</p>\n<p>马尔科夫链在 t 时刻的状态分布可以记作</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>π</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>π</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><msup><mo stretchy=\"false\">]</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\pi(t) = [\\pi_1(t),\\pi_2(t),\\cdots]^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_i(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> 表示 t 时刻处于 i 状态的概率。</p>\n<p>这块如果有疑虑可以查阅资料。</p>\n<h4 id=\"平稳分布\"><a class=\"anchor\" href=\"#平稳分布\">#</a> 平稳分布</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>π</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">P \\pi = \\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span></p>\n<p>此时 $\\pi $ 就是平稳分布。意思是，状态向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> 无法再通过状态转移 P，到达新的状态分布，则表示马尔科夫链已经到达收敛。</p>\n<p>不可约、非周期且正常返的马尔科夫链有唯一的平稳分布</p>\n<h2 id=\"pagerank算法\"><a class=\"anchor\" href=\"#pagerank算法\">#</a> PageRank 算法</h2>\n<h4 id=\"pagerank定义\"><a class=\"anchor\" href=\"#pagerank定义\">#</a> PageRank 定义</h4>\n<p>传统的 web 结构中，都是通过网页之间互联（可以看做有向图）来实现访问。<img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930100912529.png\" alt=\"image-20210930100912529\" /></p>\n<p>如图所示，我们如何表示某个网页 s 的重要性呢？看有多少网页指向这个 s 网页。这个很好理解，那么重要的网页指向的网页肯定也是比较重要的。于是我们有了两个基本的关于网页 page 重要性的定义：</p>\n<ul>\n<li>被很多网页指向的那个网页，它的重要性一定很高。</li>\n<li>被很重要的网页指向的网页，那么它的重要性也应该高。</li>\n</ul>\n<h4 id=\"pagerank算法的执行过程\"><a class=\"anchor\" href=\"#pagerank算法的执行过程\">#</a> PageRank 算法的执行过程</h4>\n<h6 id=\"初始化\"><a class=\"anchor\" href=\"#初始化\">#</a> 初始化</h6>\n<p>我们先对每个 graph 节点的 rank 值做初始化，可以定义初始的分布向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>0</mn></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>n</mi><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><msup><mo stretchy=\"false\">]</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">r_0 = [1/n,1/n,\\cdots]^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>n 表示 graph 节点的总数，我们预定义所有节点的 rank 值相加要为 1，且初始相等。</p>\n<h6 id=\"迭代\"><a class=\"anchor\" href=\"#迭代\">#</a> 迭代</h6>\n<p>做随机游走</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930102017814.png\" alt=\"image-20210930102017814\" /></p>\n<p>定义</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>r</mi><mi>j</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>→</mo><mi>j</mi></mrow></munder><mfrac><msub><mi>r</mi><mi>i</mi></msub><msub><mi>d</mi><mi>i</mi></msub></mfrac><mspace linebreak=\"newline\"></mspace><msub><mi>d</mi><mi>i</mi></msub><mo>⋯</mo><mtext>节点i的出度</mtext></mrow><annotation encoding=\"application/x-tex\">r_j = \\sum_{i\\rightarrow j} \\frac{r_i}{d_i}\\\\\nd_i \\cdots \\text{节点i的出度}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.521337em;vertical-align:-1.413777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8723309999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">→</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.413777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1075599999999999em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">节点</span><span class=\"mord\">i</span><span class=\"mord cjk_fallback\">的出度</span></span></span></span></span></span></p>\n<p>整个过程可以写为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>M</mi><mo>⋅</mo><msub><mi>r</mi><mi>t</mi></msub><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">r_{t+1} = M \\cdot r_t\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p>M 是转移矩阵，如果 i、j 两个节点有边相连，那么 Mij 表示由 j 转移到 i 的概率，值就是 1/dj。dj 是节点 j 的出度</p>\n<h6 id=\"收敛\"><a class=\"anchor\" href=\"#收敛\">#</a> 收敛</h6>\n<p>这是一个马尔科夫过程，最终会达到一个平稳分布，也就是收敛。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>M</mi><mo>⋅</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r = M \\cdot r\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></p>\n<p>实际执行时，只需要满足</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><msub><mi>r</mi><mi>t</mi></msub><mo>−</mo><msub><mi>r</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">|r_t - r_{t-1} | &lt; \\epsilon\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930104147282.png\" alt=\"image-20210930104147282\" /></p>\n<h4 id=\"pagerank算法的一般定义\"><a class=\"anchor\" href=\"#pagerank算法的一般定义\">#</a> PageRank 算法的一般定义</h4>\n<h6 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h6>\n<p><strong>Spider</strong> <strong>trap</strong></p>\n<p>如果某个节点只有一条出边，且这条出边指向它自己。<img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturespicturesimage-20210930104311723.png\" alt=\"image-20210930104311723\" /></p>\n<p>那么最终该节点会吃掉所有节点的 rank 值。很好理解，如果 j 是这种节点，那么转移矩阵 M 的第 j 列只有 Mjj 为 1，其余值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>0</mn><mspace width=\"1em\"/><mi>i</mi><mo mathvariant=\"normal\">≠</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">M_{ij} =0 \\quad i \\neq j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>。每次<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋅</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">M \\cdot r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 迭代时候，其他节点就吃不到 j 节点的 rank 值，因为它不转出，而 j 节点会一直吃到其他节点的 rank 值，因为存在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub><mo mathvariant=\"normal\">≠</mo><mn>0</mn><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>k</mi><mo mathvariant=\"normal\">≠</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M_{jk} \\neq 0  \\quad(k \\neq j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturespicturesimage-20210930104815056.png\" alt=\"image-20210930104815056\" /></p>\n<p><strong>Dead Ends</strong></p>\n<p>同理节点 j 没有出边，只有入边：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturespicturesimage-20210930105051142.png\" alt=\"image-20210930105051142\" /></p>\n<p>对应的转移矩阵 M 中第 j 列全为 0，那么每次迭代<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>⋅</mo><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">M \\cdot r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 时，没有任何一个节点（包括 j 节点自己）能吃到 j 的值。而其他节点还在给 j 节点输送 rank 值。</p>\n<p>于是，每次迭代时候，</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>r</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">sum(r(t-1))- sum(r(t)) = r_{j}(t-1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<h6 id=\"一般化\"><a class=\"anchor\" href=\"#一般化\">#</a> 一般化</h6>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930105827697.png\" alt=\"image-20210930105827697\" /></p>\n<p>定义一个转移系数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span>，每次有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">1-\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 的可能性跳转到其他节点</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>r</mi><mi>j</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>→</mo><mi>j</mi></mrow></munder><mi>β</mi><mfrac><msub><mi>r</mi><mi>i</mi></msub><msub><mi>d</mi><mi>i</mi></msub></mfrac><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mspace linebreak=\"newline\"></mspace><mi>r</mi><mo>=</mo><mi>β</mi><mi>M</mi><mi>r</mi><mo>+</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><mi>N</mi></mfrac><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">r_j = \\sum_{i \\rightarrow j} \\beta \\frac{r_i}{d_i} +(1-\\beta)\\frac{1}{N}\\\\\nr = \\beta Mr +\\frac{1-\\beta}{N} 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.521337em;vertical-align:-1.413777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.8723309999999997em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">→</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.413777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1075599999999999em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>以 dead end 为例子，假设 j 为 dead end。虽然刚开始也会有 rank 值的损失，但随着迭代的进行，只要满足下列式子就不会有 rank 值的减小。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><msub><mi>r</mi><mi>i</mi></msub><mo>=</mo><mi>β</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo mathvariant=\"normal\">≠</mo><mi>j</mi></mrow><mi>N</mi></munderover><msub><mi>r</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn><mo>−</mo><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i}^N r_i = \\beta\\sum_{i\\neq j}^{N} r_i +1-\\beta\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.106005em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.266557em;vertical-align:-1.438221em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\"><span class=\"mrel mtight\"><span class=\"mord vbox mtight\"><span class=\"thinbox mtight\"><span class=\"rlap mtight\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel mtight\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel mtight\">=</span></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.438221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span></span></p>\n<p>随着迭代的进行，sum (r) 减小的幅度会逐渐变为 0。也就是说，一般化的 PageRank 算法也是可以收敛的。</p>\n<p>假设转移矩阵为：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930112446664.png\" alt=\"image-20210930112446664\" /></p>\n<p>初始的 r 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo separator=\"true\">,</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo separator=\"true\">,</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><mo separator=\"true\">,</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>4</mn><msup><mo stretchy=\"false\">]</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">[1/4,1/4,1/4,1/4]^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">4</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>经历了 100 次迭代后，loss sum：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930112544742.png\" alt=\"image-20210930112544742\" /></p>\n<h2 id=\"personalized-pagerank\"><a class=\"anchor\" href=\"#personalized-pagerank\">#</a> Personalized PageRank</h2>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930113020041.png\" alt=\"image-20210930113020041\" /></p>\n<p>提出的问题就是怎么寻找两个节点之间的关联性。</p>\n<p>比如对于节点 Q，如何查询和他最相似的节点？</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930114027380.png\" alt=\"image-20210930114027380\" /></p>\n<h6 id=\"执行过程\"><a class=\"anchor\" href=\"#执行过程\">#</a> 执行过程</h6>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930114052888.png\" alt=\"image-20210930114052888\" /></p>\n<p>Q 连接到 user1,2,3。而不同的 user 对于 Q 的节点不一样，这就是一个转移概率</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy=\"false\">[</mo><mn>0.3</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0.3</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0.4</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">s = [0.3,0,0.3,0,0.4,0,0]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span> sum(s)=1</p>\n<p>这个就是 Q 跳转到 user 的概率。</p>\n<p>假设 Q 根据 weight 跳转到 User1，那么执行 random walk，随机跳转到其他的节点，每次访问了某个节点就将该节点的 count+1。同时进行随机 reset，重新回到节点 Q，再一次进行上述过程。</p>\n<p>算法执行过程：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20210930114811529.png\" alt=\"image-20210930114811529\" /></p>\n<p>统计最后哪个节点 count 数最多，就表示和节点 Q 最相似。</p>\n<h2 id=\"matrix-factorization\"><a class=\"anchor\" href=\"#matrix-factorization\">#</a> matrix factorization</h2>\n<p>这一块不怎么熟悉，有待进一步学习。</p>\n",
            "tags": [
                "AI",
                "图算法",
                "PageRank"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/xlab/MTTU%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/",
            "url": "https://songlinlife.top/2021/xlab/MTTU%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/",
            "title": "MTTU",
            "date_published": "2021-12-05T04:00:00.000Z",
            "content_html": "<h1 id=\"mttu代码实现\"><a class=\"anchor\" href=\"#mttu代码实现\">#</a> MTTU 代码实现</h1>\n<blockquote>\n<p>we defined a time to update(TTU) attribute for all components in our dataset.</p>\n</blockquote>\n<p>TTU 就是组件更新到新版本所用的时间。</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211202221540094.png\" alt=\"image-20211202221540094\" /></p>\n<p>这个 MTTU 也好理解，说白了就是平均依赖更新时间，但是我觉得这里有个问题，直觉来说对于大型项目来说，它的 MTTU 应该是不低的，这可能会导致多依赖项目具有天然的劣势。而且我觉得它也没有考虑版本稳定性的问题，以及大版本和小版本之间的差异性。</p>\n<p>并且我觉得这段话有待研究，他说对于 N 层依赖关系，那么头部的组件更新时间就会高达 N * D 天，在这种组件关系网中，是否也存在小世界理论？可能深度并没有想象的那么大</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211203102336919.png\" alt=\"image-20211203102336919\" /></p>\n<h3 id=\"依赖策略\"><a class=\"anchor\" href=\"#依赖策略\">#</a> 依赖策略</h3>\n<p>MTTU 真的好模糊啊，他们怎么实现了？</p>\n<p>很多组件的依赖规则都是比较模糊的。。。</p>\n<h5 id=\"dependencies\"><a class=\"anchor\" href=\"#dependencies\">#</a> dependencies</h5>\n<blockquote>\n<p>Dependencies that your project needs to run, like a library that provides functions that you call from your code.</p>\n</blockquote>\n<p>这个 dependencies 指的是 project 运行需要的包。</p>\n<p>package.json 里指定的 dependencies 都会被安装，并且具有依赖传递性。</p>\n<blockquote>\n<p>if A depends on B depends on C, npm install on A will install B and C.</p>\n</blockquote>\n<h5 id=\"devdependencies\"><a class=\"anchor\" href=\"#devdependencies\">#</a> devDependencies</h5>\n<blockquote>\n<p>Dependencies you only need during development or releasing, like compilers that take your code and compile it into javascript, test frameworks or documentation generators.</p>\n</blockquote>\n<p>project 只在开发或测试阶段使用的依赖，不具有传递性。</p>\n<h3 id=\"关于npm包依赖关系\"><a class=\"anchor\" href=\"#关于npm包依赖关系\">#</a> 关于 npm 包依赖关系</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2FybHJpcHBvbi5jb20vdXBncmFkaW5nLW5wbS1kZXBlbmRlbmNpZXMv\">Upgrading npm dependencies</span></p>\n<p>这篇文章写得真的好。</p>\n<h5 id=\"so-npm-install-installs-the-latest-safe-version-of-the-dependencies\"><a class=\"anchor\" href=\"#so-npm-install-installs-the-latest-safe-version-of-the-dependencies\">#</a> So,  <code>npm install</code>  installs the latest safe version of the dependencies？</h5>\n<p>如果 package 已经安装在  <code>node_modules</code>  中，那么就不会更新任何包。</p>\n<blockquote>\n<p>If the packages haven’t been installed and a  <code>package-lock.json</code>  file exists, then  <code>npm install</code>  will install the exact dependency versions specified in  <code>package-lock.json</code> .</p>\n</blockquote>\n<p>如果没有，就按  <code>package-lock.json</code>  安装指定的依赖。这个指定的依赖</p>\n<p>关于  <code>package-lock.json</code> ，这里有几篇很好的文章， 说明白了 package-lock.json       👉<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2NvaW5tb25rcy9ldmVyeXRoaW5nLXlvdS13YW50ZWQtdG8ta25vdy1hYm91dC1wYWNrYWdlLWxvY2stanNvbi1iODE5MTFhYThhYjg=\">Everything You Wanted To Know About package-lock.json But Were Too Afraid To Ask</span>  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXh1c2lubm8uY29tL2VuL3doYXQtdGhlLWhlY2stYXJlLXBhY2thZ2UtbG9ja3MtYW5kLXdoeS1hcmUtdGhleS15b3VyLWZyaWVuZHMv\">What the heck are package-locks, and why are they your friends?</span> 博客园的这篇也不错<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY2FuZ3FpbmdsYW5nL3AvODMzNjc1NC5odG1s\"> package-lock.json 的作用</span></p>\n<p>我没有使用过 nodejs，但我大致知道了，这玩意就是锁定依赖用。</p>\n<blockquote>\n<p><code>npm install</code>  will install the latest safe version of the dependencies if they don’t exist in the  <code>node_modules</code>  folder and, there is no  <code>package-lock.json</code>  file. However, you may think the latest safe version <strong>hasn’t</strong> been installed because  <code>package.json</code>  is unchanged, but if you check the packages in the  <code>node_modules</code>  folder, the latest safe version will have been installed.</p>\n</blockquote>\n<p>只有没有 package-lock.json，并且本地没已存在的依赖，npm 才会安装最新的依赖。</p>\n<h4 id=\"更新依赖策略\"><a class=\"anchor\" href=\"#更新依赖策略\">#</a> 更新依赖策略</h4>\n<p>执行 <code>npm outdated</code></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesnpm-outdated.png\" alt=\"npm-outdated\" /></p>\n<p><code>npm update</code>  更新依赖到 wanted。</p>\n<p>注意这个 <code>want</code>  指的是：</p>\n<blockquote>\n<p>The <strong>wanted</strong> version is the latest safe version that can be taken (according to the semantic version and the  <code>^</code>  or  <code>~</code>  prefix). The <strong>latest</strong> version is the latest version available in the npm registry.</p>\n</blockquote>\n<p>因为 npm 的版本策略是不会涉及到 major 的更新的，只会更新  <code>the latest safe version that can be taken (according to the semantic version and the </code> ^ <code>or</code> ~ <code> prefix).</code></p>\n<p>也就是说，只会更新到 package.json 中设置的版本策略中的最新。</p>\n<p>更新之后，会同时更新， package.json 和 package-lock.json</p>\n<h4 id=\"updating-all-dependencies-with-major-changes\"><a class=\"anchor\" href=\"#updating-all-dependencies-with-major-changes\">#</a> Updating all dependencies with major changes</h4>\n<p>例如： <code>npm install react@latest react-dom@latest</code></p>\n<p>也可以：</p>\n<p><code>npx npm-check-updates -u</code>  注：这条命令用于更新 package.json</p>\n<p>然后再  <code>npm install</code>  就可以更新大版本了。</p>\n<h4 id=\"依赖网络\"><a class=\"anchor\" href=\"#依赖网络\">#</a> 依赖网络</h4>\n<p>一个在线查看 npm 依赖图的网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG0uYW52YWthLmNvbS8jLw==\">https://npm.anvaka.com/#/</span></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211205163705871.png\" alt=\"image-20211205163705871\" /></p>\n<h5 id=\"npm-remote-ls\"><a class=\"anchor\" href=\"#npm-remote-ls\">#</a> npm-remote-ls</h5>\n<p>一个已经废弃的依赖查询工具。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25wbS9ucG0tcmVtb3RlLWxz\">https://github.com/npm/npm-remote-ls</span></p>\n<h5 id=\"semver解析工具\"><a class=\"anchor\" href=\"#semver解析工具\">#</a> semver 解析工具</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25wbS9ub2RlLXNlbXZlcg==\">https://github.com/npm/node-semver</span></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211208193111170.png\" alt=\"image-20211208193111170\" /></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211208193218792.png\" alt=\"image-20211208193218792\" /></p>\n<p>只有通过 semver 解析工具，才可以获得具体的依赖版本号。</p>\n<h3 id=\"mttu分析\"><a class=\"anchor\" href=\"#mttu分析\">#</a> MTTU 分析</h3>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211206154306358.png\" alt=\"image-20211206154306358\" /></p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211206155343705.png\" alt=\"image-20211206155343705\" /></p>\n<p>逻辑上存在的问题：</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 采用落后版本问题：不是每个依赖用的都是最新版本，这个毫无疑问，有可能出现这种情况，比如 C 虽然将依赖 A 从 2.2 更新到 A2.4 但是 A2.4 也不是 A 的最新版本，可能依赖 A 现在都更新到 10.9 了，但是利用 TTU 直接进行计算就会导致数值过大。逻辑上 bug：虽然更新了，但我的 TUU 反而变大了？</label></p>\n<p>解决思路：如果 TTU 要大于组件更新时间，那么就采用 组件更新时间 -（两个依赖版本相差时间）。</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> 如果组件长时间不更新依赖，但这一次更新刚好将依赖提升到最近版本，那么它的这一次更新的 TTU 就会很小，这显然是不合理的。</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 比如组件用的依赖虽然都是最新版本，但这个最新版本都是很久之前的了，根据 TTU 计算规则，它的 TTU 一直会是 0，这显然也是不合理的。</label></p>\n</li>\n</ul>\n<h5 id=\"算法伪代码\"><a class=\"anchor\" href=\"#算法伪代码\">#</a> 算法伪代码</h5>\n<p>组件 A，start， end;</p>\n<p>查询组件 A 的每一个版本的依赖和所用依赖的构建时间，以及组件 A 每个版本的构建时间。</p>\n<p><strong>case1 如果依赖是第一次被引入，将不会被计算</strong></p>\n<p><strong>case2 如果依赖进行了更新，那么直接计算它的 TTU，如果 TTU 比组件的更新时间还要长，那么选择组件 max (组件更新时间 - (依赖两个版本之间相差时间), 0)</strong></p>\n<p><strong>case3 如果依赖没有更新，但一直保持的最新版本，将不会被计算</strong></p>\n<p><strong>case4 如果依赖没有进行更新，且当前依赖版本不是最新版本且上一个版本不是最新版本，那么用组件更新时间作为他的 TTU。</strong></p>\n<p><strong>case5 如果依赖没有进行更新，且当前依赖的版本已经不是最新版本但上一个版本是最新版本，那么查询依赖处于这段时间内的更新。</strong></p>\n<h3 id=\"代码实现上遇到的问题\"><a class=\"anchor\" href=\"#代码实现上遇到的问题\">#</a> 代码实现上遇到的问题</h3>\n<p>虽然 MTTU 的计算思路很简单，但是实现方式却过于复杂，需要考虑各种版本问题。</p>\n<p>而且每个版本的每一个依赖项都要进行一次查询，对于版本迭代次数多，更新快，并且有多依赖的组件，一次查询可能耗时较长，以 react 组件为例：</p>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211208193524374.png\" alt=\"image-20211208193524374\" /></p>\n<p>耗时到达了 73s， 而我们 npm 表总共有 1833159 个组件记录。</p>\n<p>不能直接用 version 进行比较，因为 MongoDB 对字符串会基于 ASSIC 码进行比较。</p>\n<p>对 version 进行过滤是错误的。</p>\n<p>MTTU 有待解决问题：</p>\n<ul>\n<li>如果组件没有查到，就返回 0（包括没有这个组件，以及这个组件还没有创建）</li>\n<li>依赖有可能被剔除。（这个隐含地实现了）</li>\n<li>如果组件在期间没有发行版本，那么是否要进行计算？</li>\n<li>没有依赖</li>\n<li>依赖项老旧</li>\n</ul>\n<p>MTTU 反应的是更新依赖的能力，对于很多没有依赖的组件，MTTU 不能很好描述。</p>\n",
            "tags": [
                "Xlab",
                "mttu",
                "指标"
            ]
        },
        {
            "id": "https://songlinlife.top/2021/ss/zsh%E7%BE%8E%E5%8C%96/",
            "url": "https://songlinlife.top/2021/ss/zsh%E7%BE%8E%E5%8C%96/",
            "title": "zsh美化",
            "date_published": "2021-12-05T02:27:47.000Z",
            "content_html": "<p>最近得空一点，给我的 terminal 进行了一点装修。</p>\n<p>主要还是按照了 zsh，配置了主题和插件。</p>\n<h2 id=\"zsh配置\"><a class=\"anchor\" href=\"#zsh配置\">#</a> zsh 配置</h2>\n<h4 id=\"安装zsh\"><a class=\"anchor\" href=\"#安装zsh\">#</a> 安装 zsh：</h4>\n<p><code>zsh</code> ： <code>apt install zsh -y</code>   安装 zsh</p>\n<p><code>chsh -s /bin/zsh</code>  设置 zsh 为默认 sh</p>\n<h4 id=\"安装oh-my-zsh\"><a class=\"anchor\" href=\"#安装oh-my-zsh\">#</a> 安装 oh-my-zsh：</h4>\n<p><code>oh-my-zsh</code> ： <code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></p>\n<p>这里有个问题，如果不会翻墙是会被卡死的。。。。</p>\n<p><code>export all_proxy='socks://127.0.0.1'</code>  先配置一下代理</p>\n<p>再 <code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></p>\n<p>我的本地机采用了  <code>ys</code>  主题，remote 机采用了  <code>powerlevel10k</code>  主题，这样就不会搞混了。nice！</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtc3ludGF4LWhpZ2hsaWdodGluZy9ibG9iL21hc3Rlci9JTlNUQUxMLm1k\">powerlevel10k 安装</span> 遇到乱码就是字体问题。</p>\n<p><strong>其他插件</strong>：  <code>plugins=(git zsh-autosuggestions zsh-syntax-highlighting autojump)</code>  这些都可以在 github 上找到，而且用 oh-my-zsh 安装很方便！</p>\n<h4 id=\"本地机\"><a class=\"anchor\" href=\"#本地机\">#</a> 本地机：</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211205110432622.png\" alt=\"image-20211205110432622\" /></p>\n<h4 id=\"远程机\"><a class=\"anchor\" href=\"#远程机\">#</a> 远程机：</h4>\n<p><img data-src=\"https://image-2021-wu.oss-cn-beijing.aliyuncs.com/blogs/picturesimage-20211205110501278.png\" alt=\"image-20211205110501278\" /></p>\n<p>​\tok，成功搞定！</p>\n",
            "tags": [
                "琐事",
                "zsh",
                "wsl",
                "theme"
            ]
        }
    ]
}